{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/ND/Desktop/Fixed_Project/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/ND/Desktop/Fixed_Project/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { defineComponent, ref, reactive, onMounted, nextTick } from 'vue';\nimport { useRoute } from 'vue-router';\nimport { ElMessage } from 'element-plus';\nimport { getDataScope, updateDataScope, getDepartmentTree } from '@/api/dataScope';\nimport { getRoleDetail } from '@/api/role';\nexport default defineComponent({\n  name: 'DataScope',\n  setup: function setup() {\n    var route = useRoute();\n    var loading = ref(false);\n    var submitting = ref(false);\n    var currentRole = ref({});\n    var departmentTree = ref([]);\n    var deptTree = ref(null);\n\n    // 表单数据\n    var scopeForm = reactive({\n      scope: 'personal',\n      departments: []\n    });\n\n    // 数据范围选项\n    var scopeOptions = [{\n      label: '全部数据',\n      value: 'all'\n    }, {\n      label: '本部门及以下数据',\n      value: 'department_and_below'\n    }, {\n      label: '本部门数据',\n      value: 'department'\n    }, {\n      label: '仅个人数据',\n      value: 'personal'\n    }, {\n      label: '自定义数据',\n      value: 'custom'\n    }];\n\n    // 部门树配置\n    var defaultProps = {\n      children: 'children',\n      label: 'name'\n    };\n\n    // 获取角色信息\n    var getRoleInfo = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var _yield$getRoleDetail, data;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return getRoleDetail(route.params.id);\n            case 3:\n              _yield$getRoleDetail = _context.sent;\n              data = _yield$getRoleDetail.data;\n              currentRole.value = data;\n              _context.next = 11;\n              break;\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](0);\n              console.error('Failed to get role info:', _context.t0);\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[0, 8]]);\n      }));\n      return function getRoleInfo() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    // 获取数据权限配置\n    var getScope = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var _yield$getDataScope, data;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              loading.value = true;\n              _context2.prev = 1;\n              _context2.next = 4;\n              return getDataScope(route.params.id);\n            case 4:\n              _yield$getDataScope = _context2.sent;\n              data = _yield$getDataScope.data;\n              scopeForm.scope = data.scope;\n              scopeForm.departments = data.departments || [];\n\n              // 设置选中的部门\n              if (!(scopeForm.scope === 'custom' && scopeForm.departments.length > 0)) {\n                _context2.next = 12;\n                break;\n              }\n              _context2.next = 11;\n              return nextTick();\n            case 11:\n              if (deptTree.value) {\n                deptTree.value.setCheckedKeys(scopeForm.departments);\n              }\n            case 12:\n              _context2.next = 17;\n              break;\n            case 14:\n              _context2.prev = 14;\n              _context2.t0 = _context2[\"catch\"](1);\n              console.error('Failed to get data scope:', _context2.t0);\n            case 17:\n              loading.value = false;\n            case 18:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, null, [[1, 14]]);\n      }));\n      return function getScope() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    // 获取部门树\n    var getDeptTree = /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        var _yield$getDepartmentT, data;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              _context3.next = 3;\n              return getDepartmentTree();\n            case 3:\n              _yield$getDepartmentT = _context3.sent;\n              data = _yield$getDepartmentT.data;\n              departmentTree.value = data;\n              _context3.next = 11;\n              break;\n            case 8:\n              _context3.prev = 8;\n              _context3.t0 = _context3[\"catch\"](0);\n              console.error('Failed to get department tree:', _context3.t0);\n            case 11:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, null, [[0, 8]]);\n      }));\n      return function getDeptTree() {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n\n    // 处理部门选择\n    var handleCheck = function handleCheck(data, _ref4) {\n      var checkedKeys = _ref4.checkedKeys;\n      scopeForm.departments = checkedKeys;\n    };\n\n    // 提交配置\n    var handleSubmit = /*#__PURE__*/function () {\n      var _ref5 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              submitting.value = true;\n              _context4.prev = 1;\n              _context4.next = 4;\n              return updateDataScope(route.params.id, scopeForm);\n            case 4:\n              ElMessage.success('配置保存成功');\n              _context4.next = 11;\n              break;\n            case 7:\n              _context4.prev = 7;\n              _context4.t0 = _context4[\"catch\"](1);\n              console.error('Failed to update data scope:', _context4.t0);\n              ElMessage.error('配置保存失败');\n            case 11:\n              submitting.value = false;\n            case 12:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4, null, [[1, 7]]);\n      }));\n      return function handleSubmit() {\n        return _ref5.apply(this, arguments);\n      };\n    }();\n    onMounted(function () {\n      getRoleInfo();\n      getScope();\n      getDeptTree();\n    });\n    return {\n      loading: loading,\n      submitting: submitting,\n      currentRole: currentRole,\n      scopeForm: scopeForm,\n      scopeOptions: scopeOptions,\n      departmentTree: departmentTree,\n      defaultProps: defaultProps,\n      deptTree: deptTree,\n      handleCheck: handleCheck,\n      handleSubmit: handleSubmit\n    };\n  }\n});","map":{"version":3,"names":["defineComponent","ref","reactive","onMounted","nextTick","useRoute","ElMessage","getDataScope","updateDataScope","getDepartmentTree","getRoleDetail","name","setup","route","loading","submitting","currentRole","departmentTree","deptTree","scopeForm","scope","departments","scopeOptions","label","value","defaultProps","children","getRoleInfo","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_yield$getRoleDetail","data","wrap","_callee$","_context","prev","next","params","id","sent","t0","console","error","stop","apply","arguments","getScope","_ref2","_callee2","_yield$getDataScope","_callee2$","_context2","length","setCheckedKeys","getDeptTree","_ref3","_callee3","_yield$getDepartmentT","_callee3$","_context3","handleCheck","_ref4","checkedKeys","handleSubmit","_ref5","_callee4","_callee4$","_context4","success"],"sources":["C:\\Users\\ND\\Desktop\\Fixed_Project\\frontend\\src\\views\\role\\dataScope.vue"],"sourcesContent":["<template>\r\n  <div class=\"app-container\">\r\n    <el-card class=\"box-card\">\r\n      <template #header>\r\n        <div class=\"card-header\">\r\n          <span>数据权限配置</span>\r\n        </div>\r\n      </template>\r\n      \r\n      <el-form\r\n        ref=\"form\"\r\n        :model=\"scopeForm\"\r\n        label-width=\"120px\"\r\n        v-loading=\"loading\"\r\n      >\r\n        <el-form-item label=\"角色名称\">\r\n          <span>{{ currentRole.name }}</span>\r\n        </el-form-item>\r\n        \r\n        <el-form-item label=\"数据范围\">\r\n          <el-radio-group v-model=\"scopeForm.scope\">\r\n            <el-radio\r\n              v-for=\"item in scopeOptions\"\r\n              :key=\"item.value\"\r\n              :label=\"item.value\"\r\n            >\r\n              {{ item.label }}\r\n            </el-radio>\r\n          </el-radio-group>\r\n        </el-form-item>\r\n        \r\n        <el-form-item\r\n          label=\"自定义部门\"\r\n          v-if=\"scopeForm.scope === 'custom'\"\r\n        >\r\n          <el-tree\r\n            ref=\"deptTree\"\r\n            :data=\"departmentTree\"\r\n            show-checkbox\r\n            node-key=\"id\"\r\n            :props=\"defaultProps\"\r\n            @check=\"handleCheck\"\r\n          />\r\n        </el-form-item>\r\n        \r\n        <el-form-item>\r\n          <el-button\r\n            type=\"primary\"\r\n            @click=\"handleSubmit\"\r\n            :loading=\"submitting\"\r\n          >\r\n            保存配置\r\n          </el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { defineComponent, ref, reactive, onMounted, nextTick } from 'vue'\r\nimport { useRoute } from 'vue-router'\r\nimport { ElMessage } from 'element-plus'\r\nimport { getDataScope, updateDataScope, getDepartmentTree } from '@/api/dataScope'\r\nimport { getRoleDetail } from '@/api/role'\r\n\r\nexport default defineComponent({\r\n  name: 'DataScope',\r\n  setup() {\r\n    const route = useRoute()\r\n    const loading = ref(false)\r\n    const submitting = ref(false)\r\n    const currentRole = ref({})\r\n    const departmentTree = ref([])\r\n    const deptTree = ref(null)\r\n    \r\n    // 表单数据\r\n    const scopeForm = reactive({\r\n      scope: 'personal',\r\n      departments: []\r\n    })\r\n    \r\n    // 数据范围选项\r\n    const scopeOptions = [\r\n      { label: '全部数据', value: 'all' },\r\n      { label: '本部门及以下数据', value: 'department_and_below' },\r\n      { label: '本部门数据', value: 'department' },\r\n      { label: '仅个人数据', value: 'personal' },\r\n      { label: '自定义数据', value: 'custom' }\r\n    ]\r\n    \r\n    // 部门树配置\r\n    const defaultProps = {\r\n      children: 'children',\r\n      label: 'name'\r\n    }\r\n    \r\n    // 获取角色信息\r\n    const getRoleInfo = async () => {\r\n      try {\r\n        const { data } = await getRoleDetail(route.params.id)\r\n        currentRole.value = data\r\n      } catch (error) {\r\n        console.error('Failed to get role info:', error)\r\n      }\r\n    }\r\n    \r\n    // 获取数据权限配置\r\n    const getScope = async () => {\r\n      loading.value = true\r\n      try {\r\n        const { data } = await getDataScope(route.params.id)\r\n        scopeForm.scope = data.scope\r\n        scopeForm.departments = data.departments || []\r\n        \r\n        // 设置选中的部门\r\n        if (scopeForm.scope === 'custom' && scopeForm.departments.length > 0) {\r\n          await nextTick()\r\n          if (deptTree.value) {\r\n            deptTree.value.setCheckedKeys(scopeForm.departments)\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.error('Failed to get data scope:', error)\r\n      }\r\n      loading.value = false\r\n    }\r\n    \r\n    // 获取部门树\r\n    const getDeptTree = async () => {\r\n      try {\r\n        const { data } = await getDepartmentTree()\r\n        departmentTree.value = data\r\n      } catch (error) {\r\n        console.error('Failed to get department tree:', error)\r\n      }\r\n    }\r\n    \r\n    // 处理部门选择\r\n    const handleCheck = (data, { checkedKeys }) => {\r\n      scopeForm.departments = checkedKeys\r\n    }\r\n    \r\n    // 提交配置\r\n    const handleSubmit = async () => {\r\n      submitting.value = true\r\n      try {\r\n        await updateDataScope(route.params.id, scopeForm)\r\n        ElMessage.success('配置保存成功')\r\n      } catch (error) {\r\n        console.error('Failed to update data scope:', error)\r\n        ElMessage.error('配置保存失败')\r\n      }\r\n      submitting.value = false\r\n    }\r\n    \r\n    onMounted(() => {\r\n      getRoleInfo()\r\n      getScope()\r\n      getDeptTree()\r\n    })\r\n    \r\n    return {\r\n      loading,\r\n      submitting,\r\n      currentRole,\r\n      scopeForm,\r\n      scopeOptions,\r\n      departmentTree,\r\n      defaultProps,\r\n      deptTree,\r\n      handleCheck,\r\n      handleSubmit\r\n    }\r\n  }\r\n})\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.card-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n\r\n.box-card {\r\n  width: 100%;\r\n  margin-bottom: 20px;\r\n}\r\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}