{"ast":null,"code":"import { createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"asset-list\"\n};\nconst _hoisted_2 = {\n  class: \"header\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_el_table_column = _resolveComponent(\"el-table-column\");\n  const _component_el_tag = _resolveComponent(\"el-tag\");\n  const _component_el_button_group = _resolveComponent(\"el-button-group\");\n  const _component_el_table = _resolveComponent(\"el-table\");\n  const _component_el_card = _resolveComponent(\"el-card\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_el_card, null, {\n    header: _withCtx(() => [_createElementVNode(\"div\", _hoisted_2, [_cache[1] || (_cache[1] = _createElementVNode(\"span\", null, \"资产列表\", -1 /* HOISTED */)), _createVNode(_component_el_button, {\n      type: \"primary\",\n      onClick: _ctx.handleAdd\n    }, {\n      default: _withCtx(() => _cache[0] || (_cache[0] = [_createTextVNode(\"新增资产\")])),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"onClick\"])])]),\n    default: _withCtx(() => [_createVNode(_component_el_table, {\n      data: _ctx.assetList,\n      border: \"\",\n      style: {\n        \"width\": \"100%\"\n      }\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_table_column, {\n        prop: \"asset_number\",\n        label: \"资产编号\",\n        width: \"120\"\n      }), _createVNode(_component_el_table_column, {\n        prop: \"name\",\n        label: \"资产名称\"\n      }), _createVNode(_component_el_table_column, {\n        prop: \"category.name\",\n        label: \"类别\",\n        width: \"120\"\n      }), _createVNode(_component_el_table_column, {\n        prop: \"status\",\n        label: \"状态\",\n        width: \"100\"\n      }, {\n        default: _withCtx(({\n          row\n        }) => [_createVNode(_component_el_tag, {\n          type: _ctx.getStatusType(row.status)\n        }, {\n          default: _withCtx(() => [_createTextVNode(_toDisplayString(_ctx.getStatusLabel(row.status)), 1 /* TEXT */)]),\n          _: 2 /* DYNAMIC */\n        }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"type\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_table_column, {\n        prop: \"responsible_person\",\n        label: \"负责人\",\n        width: \"120\"\n      }), _createVNode(_component_el_table_column, {\n        prop: \"location\",\n        label: \"位置\",\n        width: \"150\"\n      }), _createVNode(_component_el_table_column, {\n        label: \"操作\",\n        width: \"200\",\n        fixed: \"right\"\n      }, {\n        default: _withCtx(({\n          row\n        }) => [_createVNode(_component_el_button_group, null, {\n          default: _withCtx(() => [_createVNode(_component_el_button, {\n            size: \"small\",\n            onClick: $event => _ctx.handleEdit(row)\n          }, {\n            default: _withCtx(() => _cache[2] || (_cache[2] = [_createTextVNode(\"编辑\")])),\n            _: 2 /* DYNAMIC */\n          }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"]), _createVNode(_component_el_button, {\n            size: \"small\",\n            type: \"danger\",\n            onClick: $event => _ctx.handleDelete(row)\n          }, {\n            default: _withCtx(() => _cache[3] || (_cache[3] = [_createTextVNode(\"删除\")])),\n            _: 2 /* DYNAMIC */\n          }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"])]),\n          _: 2 /* DYNAMIC */\n        }, 1024 /* DYNAMIC_SLOTS */)]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"data\"])]),\n    _: 1 /* STABLE */\n  })]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createVNode","_component_el_card","header","_withCtx","_createElementVNode","_hoisted_2","_component_el_button","type","onClick","_ctx","handleAdd","default","_cache","_createTextVNode","_","_component_el_table","data","assetList","border","style","_component_el_table_column","prop","label","width","row","_component_el_tag","getStatusType","status","_toDisplayString","getStatusLabel","fixed","_component_el_button_group","size","$event","handleEdit","handleDelete"],"sources":["C:\\Users\\ND\\Desktop\\Fixed_Project\\frontend\\src\\views\\assets\\AssetList.vue"],"sourcesContent":["<template>\r\n  <div class=\"asset-list\">\r\n    <el-card>\r\n      <template #header>\r\n        <div class=\"header\">\r\n          <span>资产列表</span>\r\n          <el-button type=\"primary\" @click=\"handleAdd\">新增资产</el-button>\r\n        </div>\r\n      </template>\r\n      \r\n      <el-table :data=\"assetList\" border style=\"width: 100%\">\r\n        <el-table-column prop=\"asset_number\" label=\"资产编号\" width=\"120\" />\r\n        <el-table-column prop=\"name\" label=\"资产名称\" />\r\n        <el-table-column prop=\"category.name\" label=\"类别\" width=\"120\" />\r\n        <el-table-column prop=\"status\" label=\"状态\" width=\"100\">\r\n          <template #default=\"{ row }\">\r\n            <el-tag :type=\"getStatusType(row.status)\">\r\n              {{ getStatusLabel(row.status) }}\r\n            </el-tag>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"responsible_person\" label=\"负责人\" width=\"120\" />\r\n        <el-table-column prop=\"location\" label=\"位置\" width=\"150\" />\r\n        <el-table-column label=\"操作\" width=\"200\" fixed=\"right\">\r\n          <template #default=\"{ row }\">\r\n            <el-button-group>\r\n              <el-button size=\"small\" @click=\"handleEdit(row)\">编辑</el-button>\r\n              <el-button size=\"small\" type=\"danger\" @click=\"handleDelete(row)\">删除</el-button>\r\n            </el-button-group>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { defineComponent, ref, onMounted } from 'vue'\r\nimport { getAssetList } from '@/api/asset'\r\n\r\nexport default defineComponent({\r\n  name: 'AssetList',\r\n  setup() {\r\n    const assetList = ref([])\r\n\r\n    const fetchData = async () => {\r\n      try {\r\n        const { data } = await getAssetList()\r\n        assetList.value = data\r\n      } catch (error) {\r\n        console.error('获取资产列表失败:', error)\r\n      }\r\n    }\r\n\r\n    const getStatusType = (status) => {\r\n      const types = {\r\n        in_use: 'success',\r\n        idle: 'info',\r\n        maintenance: 'warning',\r\n        scrapped: 'danger'\r\n      }\r\n      return types[status] || 'info'\r\n    }\r\n\r\n    const getStatusLabel = (status) => {\r\n      const labels = {\r\n        in_use: '使用中',\r\n        idle: '闲置',\r\n        maintenance: '维修中',\r\n        scrapped: '已报废'\r\n      }\r\n      return labels[status] || status\r\n    }\r\n\r\n    onMounted(fetchData)\r\n\r\n    return {\r\n      assetList,\r\n      getStatusType,\r\n      getStatusLabel\r\n    }\r\n  }\r\n})\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.asset-list {\r\n  min-height: calc(100vh - 120px);\r\n  background-color: transparent;\r\n  \r\n  .el-card {\r\n    box-shadow: 0 1px 4px rgba(0,21,41,.08);\r\n  }\r\n  \r\n  .header {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n  }\r\n}\r\n</style> "],"mappings":";;EACOA,KAAK,EAAC;AAAY;;EAGZA,KAAK,EAAC;AAAQ;;;;;;;;uBAHzBC,mBAAA,CAgCM,OAhCNC,UAgCM,GA/BJC,YAAA,CA8BUC,kBAAA;IA7BGC,MAAM,EAAAC,QAAA,CACf,MAGM,CAHNC,mBAAA,CAGM,OAHNC,UAGM,G,0BAFJD,mBAAA,CAAiB,cAAX,MAAI,sBACVJ,YAAA,CAA6DM,oBAAA;MAAlDC,IAAI,EAAC,SAAS;MAAEC,OAAK,EAAEC,IAAA,CAAAC;;MAN5CC,OAAA,EAAAR,QAAA,CAMuD,MAAIS,MAAA,QAAAA,MAAA,OAN3DC,gBAAA,CAMuD,MAAI,E;MAN3DC,CAAA;;IAAAH,OAAA,EAAAR,QAAA,CAUM,MAqBW,CArBXH,YAAA,CAqBWe,mBAAA;MArBAC,IAAI,EAAEP,IAAA,CAAAQ,SAAS;MAAEC,MAAM,EAAN,EAAM;MAACC,KAAmB,EAAnB;QAAA;MAAA;;MAVzCR,OAAA,EAAAR,QAAA,CAWQ,MAAgE,CAAhEH,YAAA,CAAgEoB,0BAAA;QAA/CC,IAAI,EAAC,cAAc;QAACC,KAAK,EAAC,MAAM;QAACC,KAAK,EAAC;UACxDvB,YAAA,CAA4CoB,0BAAA;QAA3BC,IAAI,EAAC,MAAM;QAACC,KAAK,EAAC;UACnCtB,YAAA,CAA+DoB,0BAAA;QAA9CC,IAAI,EAAC,eAAe;QAACC,KAAK,EAAC,IAAI;QAACC,KAAK,EAAC;UACvDvB,YAAA,CAMkBoB,0BAAA;QANDC,IAAI,EAAC,QAAQ;QAACC,KAAK,EAAC,IAAI;QAACC,KAAK,EAAC;;QACnCZ,OAAO,EAAAR,QAAA,CAChB,CAES;UAHWqB;QAAG,OACvBxB,YAAA,CAESyB,iBAAA;UAFAlB,IAAI,EAAEE,IAAA,CAAAiB,aAAa,CAACF,GAAG,CAACG,MAAM;;UAhBnDhB,OAAA,EAAAR,QAAA,CAiBc,MAAgC,CAjB9CU,gBAAA,CAAAe,gBAAA,CAiBiBnB,IAAA,CAAAoB,cAAc,CAACL,GAAG,CAACG,MAAM,kB;UAjB1Cb,CAAA;;QAAAA,CAAA;UAqBQd,YAAA,CAAqEoB,0BAAA;QAApDC,IAAI,EAAC,oBAAoB;QAACC,KAAK,EAAC,KAAK;QAACC,KAAK,EAAC;UAC7DvB,YAAA,CAA0DoB,0BAAA;QAAzCC,IAAI,EAAC,UAAU;QAACC,KAAK,EAAC,IAAI;QAACC,KAAK,EAAC;UAClDvB,YAAA,CAOkBoB,0BAAA;QAPDE,KAAK,EAAC,IAAI;QAACC,KAAK,EAAC,KAAK;QAACO,KAAK,EAAC;;QACjCnB,OAAO,EAAAR,QAAA,CAChB,CAGkB;UAJEqB;QAAG,OACvBxB,YAAA,CAGkB+B,0BAAA;UA5B9BpB,OAAA,EAAAR,QAAA,CA0Bc,MAA+D,CAA/DH,YAAA,CAA+DM,oBAAA;YAApD0B,IAAI,EAAC,OAAO;YAAExB,OAAK,EAAAyB,MAAA,IAAExB,IAAA,CAAAyB,UAAU,CAACV,GAAG;;YA1B5Db,OAAA,EAAAR,QAAA,CA0B+D,MAAES,MAAA,QAAAA,MAAA,OA1BjEC,gBAAA,CA0B+D,IAAE,E;YA1BjEC,CAAA;4DA2Bcd,YAAA,CAA+EM,oBAAA;YAApE0B,IAAI,EAAC,OAAO;YAACzB,IAAI,EAAC,QAAQ;YAAEC,OAAK,EAAAyB,MAAA,IAAExB,IAAA,CAAA0B,YAAY,CAACX,GAAG;;YA3B5Eb,OAAA,EAAAR,QAAA,CA2B+E,MAAES,MAAA,QAAAA,MAAA,OA3BjFC,gBAAA,CA2B+E,IAAE,E;YA3BjFC,CAAA;;UAAAA,CAAA;;QAAAA,CAAA;;MAAAA,CAAA;;IAAAA,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}