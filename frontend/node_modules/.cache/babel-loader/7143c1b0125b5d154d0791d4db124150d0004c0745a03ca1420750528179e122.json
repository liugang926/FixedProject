{"ast":null,"code":"import { createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createElementVNode as _createElementVNode, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, withKeys as _withKeys, createElementBlock as _createElementBlock } from \"vue\";\nvar _hoisted_1 = {\n  \"class\": \"login-container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_el_button = _resolveComponent(\"el-button\");\n  var _component_User = _resolveComponent(\"User\");\n  var _component_el_icon = _resolveComponent(\"el-icon\");\n  var _component_el_input = _resolveComponent(\"el-input\");\n  var _component_el_form_item = _resolveComponent(\"el-form-item\");\n  var _component_Lock = _resolveComponent(\"Lock\");\n  var _component_View = _resolveComponent(\"View\");\n  var _component_Hide = _resolveComponent(\"Hide\");\n  var _component_el_form = _resolveComponent(\"el-form\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_el_button, {\n    onClick: _ctx.testApi,\n    type: \"text\"\n  }, {\n    \"default\": _withCtx(function () {\n      return _cache[3] || (_cache[3] = [_createTextVNode(\"测试API\")]);\n    }),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"onClick\"]), _createVNode(_component_el_form, {\n    ref: \"loginFormRef\",\n    model: _ctx.loginForm,\n    rules: _ctx.loginRules,\n    \"class\": \"login-form\",\n    autocomplete: \"on\",\n    \"label-position\": \"left\"\n  }, {\n    \"default\": _withCtx(function () {\n      return [_cache[5] || (_cache[5] = _createElementVNode(\"div\", {\n        \"class\": \"title-container\"\n      }, [_createElementVNode(\"h3\", {\n        \"class\": \"title\"\n      }, \"固定资产管理系统\")], -1 /* HOISTED */)), _createVNode(_component_el_form_item, {\n        prop: \"username\"\n      }, {\n        \"default\": _withCtx(function () {\n          return [_createVNode(_component_el_input, {\n            modelValue: _ctx.loginForm.username,\n            \"onUpdate:modelValue\": _cache[0] || (_cache[0] = function ($event) {\n              return _ctx.loginForm.username = $event;\n            }),\n            placeholder: \"用户名\",\n            type: \"text\",\n            tabindex: \"1\",\n            autocomplete: \"on\"\n          }, {\n            prefix: _withCtx(function () {\n              return [_createVNode(_component_el_icon, null, {\n                \"default\": _withCtx(function () {\n                  return [_createVNode(_component_User)];\n                }),\n                _: 1 /* STABLE */\n              })];\n            }),\n            _: 1 /* STABLE */\n          }, 8 /* PROPS */, [\"modelValue\"])];\n        }),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, {\n        prop: \"password\"\n      }, {\n        \"default\": _withCtx(function () {\n          return [_createVNode(_component_el_input, {\n            modelValue: _ctx.loginForm.password,\n            \"onUpdate:modelValue\": _cache[2] || (_cache[2] = function ($event) {\n              return _ctx.loginForm.password = $event;\n            }),\n            type: _ctx.passwordVisible ? 'text' : 'password',\n            placeholder: \"密码\",\n            tabindex: \"2\",\n            autocomplete: \"on\",\n            onKeyup: _withKeys(_ctx.handleLogin, [\"enter\"])\n          }, {\n            prefix: _withCtx(function () {\n              return [_createVNode(_component_el_icon, null, {\n                \"default\": _withCtx(function () {\n                  return [_createVNode(_component_Lock)];\n                }),\n                _: 1 /* STABLE */\n              })];\n            }),\n            suffix: _withCtx(function () {\n              return [_createVNode(_component_el_icon, {\n                \"class\": \"password-icon\",\n                onClick: _cache[1] || (_cache[1] = function ($event) {\n                  return _ctx.passwordVisible = !_ctx.passwordVisible;\n                })\n              }, {\n                \"default\": _withCtx(function () {\n                  return [_ctx.passwordVisible ? (_openBlock(), _createBlock(_component_View, {\n                    key: 0\n                  })) : (_openBlock(), _createBlock(_component_Hide, {\n                    key: 1\n                  }))];\n                }),\n                _: 1 /* STABLE */\n              })];\n            }),\n            _: 1 /* STABLE */\n          }, 8 /* PROPS */, [\"modelValue\", \"type\", \"onKeyup\"])];\n        }),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_button, {\n        loading: _ctx.loading,\n        type: \"primary\",\n        \"class\": \"login-button\",\n        onClick: _ctx.handleLogin\n      }, {\n        \"default\": _withCtx(function () {\n          return _cache[4] || (_cache[4] = [_createTextVNode(\" 登录 \")]);\n        }),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"loading\", \"onClick\"])];\n    }),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"model\", \"rules\"])]);\n}","map":{"version":3,"names":["_createElementBlock","_hoisted_1","_createVNode","_component_el_button","onClick","_ctx","testApi","type","_withCtx","_cache","_createTextVNode","_","_component_el_form","ref","model","loginForm","rules","loginRules","autocomplete","_createElementVNode","_component_el_form_item","prop","_component_el_input","modelValue","username","$event","placeholder","tabindex","prefix","_component_el_icon","_component_User","password","passwordVisible","onKeyup","_withKeys","handleLogin","_component_Lock","suffix","_createBlock","_component_View","key","_component_Hide","loading"],"sources":["C:\\Users\\ND\\Desktop\\Fixed_Project\\frontend\\src\\views\\login\\Login.vue"],"sourcesContent":["<template>\r\n  <div class=\"login-container\">\r\n    <el-button @click=\"testApi\" type=\"text\">测试API</el-button>\r\n    <el-form\r\n      ref=\"loginFormRef\"\r\n      :model=\"loginForm\"\r\n      :rules=\"loginRules\"\r\n      class=\"login-form\"\r\n      autocomplete=\"on\"\r\n      label-position=\"left\"\r\n    >\r\n      <div class=\"title-container\">\r\n        <h3 class=\"title\">固定资产管理系统</h3>\r\n      </div>\r\n\r\n      <el-form-item prop=\"username\">\r\n        <el-input\r\n          v-model=\"loginForm.username\"\r\n          placeholder=\"用户名\"\r\n          type=\"text\"\r\n          tabindex=\"1\"\r\n          autocomplete=\"on\"\r\n        >\r\n          <template #prefix>\r\n            <el-icon><User /></el-icon>\r\n          </template>\r\n        </el-input>\r\n      </el-form-item>\r\n\r\n      <el-form-item prop=\"password\">\r\n        <el-input\r\n          v-model=\"loginForm.password\"\r\n          :type=\"passwordVisible ? 'text' : 'password'\"\r\n          placeholder=\"密码\"\r\n          tabindex=\"2\"\r\n          autocomplete=\"on\"\r\n          @keyup.enter=\"handleLogin\"\r\n        >\r\n          <template #prefix>\r\n            <el-icon><Lock /></el-icon>\r\n          </template>\r\n          <template #suffix>\r\n            <el-icon \r\n              class=\"password-icon\" \r\n              @click=\"passwordVisible = !passwordVisible\"\r\n            >\r\n              <View v-if=\"passwordVisible\" />\r\n              <Hide v-else />\r\n            </el-icon>\r\n          </template>\r\n        </el-input>\r\n      </el-form-item>\r\n\r\n      <el-button\r\n        :loading=\"loading\"\r\n        type=\"primary\"\r\n        class=\"login-button\"\r\n        @click=\"handleLogin\"\r\n      >\r\n        登录\r\n      </el-button>\r\n    </el-form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { defineComponent, ref, reactive } from 'vue'\r\nimport { useStore } from 'vuex'\r\nimport { useRouter, useRoute } from 'vue-router'\r\nimport { ElMessage } from 'element-plus'\r\nimport { User, Lock, View, Hide } from '@element-plus/icons-vue'\r\nimport request from '@/utils/request'\r\n\r\nexport default defineComponent({\r\n  name: 'Login',\r\n  components: {\r\n    User,\r\n    Lock,\r\n    View,\r\n    Hide\r\n  },\r\n  setup() {\r\n    const store = useStore()\r\n    const router = useRouter()\r\n    const route = useRoute()\r\n    const loginFormRef = ref(null)\r\n    const loading = ref(false)\r\n    const passwordVisible = ref(false)\r\n\r\n    const loginForm = reactive({\r\n      username: '',\r\n      password: ''\r\n    })\r\n\r\n    const loginRules = {\r\n      username: [\r\n        { required: true, message: '请输入用户名', trigger: 'blur' },\r\n        { min: 3, message: '用户名长度至少为3个字符', trigger: 'blur' }\r\n      ],\r\n      password: [\r\n        { required: true, message: '请输入密码', trigger: 'blur' },\r\n        { min: 6, message: '密码长度至少为6个字符', trigger: 'blur' }\r\n      ]\r\n    }\r\n\r\n    const handleLogin = () => {\r\n      loginFormRef.value?.validate(async (valid) => {\r\n        if (valid) {\r\n          try {\r\n            loading.value = true\r\n            await store.dispatch('user/login', {\r\n              username: loginForm.username,\r\n              password: loginForm.password\r\n            })\r\n            await store.dispatch('permission/generateRoutes')\r\n            ElMessage.success('登录成功')\r\n            const redirect = route.query.redirect || '/'\r\n            router.push({ path: redirect })\r\n          } catch (error) {\r\n            ElMessage.error(error.message || '登录失败')\r\n          } finally {\r\n            loading.value = false\r\n          }\r\n        }\r\n      })\r\n    }\r\n\r\n    const testApi = async () => {\r\n      try {\r\n        const res = await request({\r\n          url: '/api/debug/',\r\n          method: 'get'\r\n        })\r\n        console.log('Debug API response:', res)\r\n      } catch (error) {\r\n        console.log('Debug API error:', error)\r\n      }\r\n    }\r\n\r\n    return {\r\n      loginForm,\r\n      loginRules,\r\n      loginFormRef,\r\n      loading,\r\n      passwordVisible,\r\n      handleLogin,\r\n      testApi\r\n    }\r\n  }\r\n})\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.login-container {\r\n  min-height: 100vh;\r\n  width: 100%;\r\n  background-color: #2d3a4b;\r\n  overflow: hidden;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  .login-form {\r\n    width: 400px;\r\n    padding: 40px 35px;\r\n    background: #fff;\r\n    border-radius: 4px;\r\n    box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.1);\r\n\r\n    .title-container {\r\n      text-align: center;\r\n      margin-bottom: 30px;\r\n\r\n      .title {\r\n        font-size: 26px;\r\n        color: #333;\r\n        margin: 0;\r\n      }\r\n    }\r\n\r\n    :deep(.el-input) {\r\n      height: 48px;\r\n      \r\n      input {\r\n        height: 48px;\r\n        padding-left: 40px;\r\n        background: transparent;\r\n        \r\n        &:-webkit-autofill {\r\n          box-shadow: 0 0 0 1000px #fff inset !important;\r\n        }\r\n      }\r\n\r\n      .el-input__prefix {\r\n        left: 10px;\r\n        top: 0;\r\n        height: 100%;\r\n        color: #909399;\r\n      }\r\n    }\r\n\r\n    .password-icon {\r\n      cursor: pointer;\r\n      color: #909399;\r\n    }\r\n\r\n    .login-button {\r\n      width: 100%;\r\n      height: 48px;\r\n      margin-top: 10px;\r\n    }\r\n  }\r\n}\r\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}