{"ast":null,"code":"import { defineComponent, ref, reactive } from 'vue';\nimport { useStore } from 'vuex';\nimport { useRouter, useRoute } from 'vue-router';\nimport { ElMessage } from 'element-plus';\nimport { User, Lock, View, Hide } from '@element-plus/icons-vue';\nimport request from '@/utils/request';\nexport default defineComponent({\n  name: 'Login',\n  components: {\n    User,\n    Lock,\n    View,\n    Hide\n  },\n  setup() {\n    const store = useStore();\n    const router = useRouter();\n    const route = useRoute();\n    const loginFormRef = ref(null);\n    const loading = ref(false);\n    const passwordVisible = ref(false);\n    const loginForm = reactive({\n      username: '',\n      password: ''\n    });\n    const loginRules = {\n      username: [{\n        required: true,\n        message: '请输入用户名',\n        trigger: 'blur'\n      }, {\n        min: 3,\n        message: '用户名长度至少为3个字符',\n        trigger: 'blur'\n      }],\n      password: [{\n        required: true,\n        message: '请输入密码',\n        trigger: 'blur'\n      }, {\n        min: 6,\n        message: '密码长度至少为6个字符',\n        trigger: 'blur'\n      }]\n    };\n    const handleLogin = () => {\n      loginFormRef.value?.validate(async valid => {\n        if (valid) {\n          try {\n            loading.value = true;\n            await store.dispatch('user/login', {\n              username: loginForm.username,\n              password: loginForm.password\n            });\n            await store.dispatch('permission/generateRoutes');\n            ElMessage.success('登录成功');\n            const redirect = route.query.redirect || '/';\n            router.push({\n              path: redirect\n            });\n          } catch (error) {\n            ElMessage.error(error.message || '登录失败');\n          } finally {\n            loading.value = false;\n          }\n        }\n      });\n    };\n    const testApi = async () => {\n      try {\n        const res = await request({\n          url: '/debug/',\n          method: 'get'\n        });\n        console.log('Debug API response:', res);\n      } catch (error) {\n        console.log('Debug API error:', error);\n      }\n    };\n    return {\n      loginForm,\n      loginRules,\n      loginFormRef,\n      loading,\n      passwordVisible,\n      handleLogin,\n      testApi\n    };\n  }\n});","map":{"version":3,"names":["defineComponent","ref","reactive","useStore","useRouter","useRoute","ElMessage","User","Lock","View","Hide","request","name","components","setup","store","router","route","loginFormRef","loading","passwordVisible","loginForm","username","password","loginRules","required","message","trigger","min","handleLogin","value","validate","valid","dispatch","success","redirect","query","push","path","error","testApi","res","url","method","console","log"],"sources":["C:\\Users\\ND\\Desktop\\Fixed_Project\\frontend\\src\\views\\login\\Login.vue"],"sourcesContent":["<template>\r\n  <div class=\"login-container\">\r\n    <el-button @click=\"testApi\" type=\"text\">测试API</el-button>\r\n    <el-form\r\n      ref=\"loginFormRef\"\r\n      :model=\"loginForm\"\r\n      :rules=\"loginRules\"\r\n      class=\"login-form\"\r\n      autocomplete=\"on\"\r\n      label-position=\"left\"\r\n    >\r\n      <div class=\"title-container\">\r\n        <h3 class=\"title\">固定资产管理系统</h3>\r\n      </div>\r\n\r\n      <el-form-item prop=\"username\">\r\n        <el-input\r\n          v-model=\"loginForm.username\"\r\n          placeholder=\"用户名\"\r\n          type=\"text\"\r\n          tabindex=\"1\"\r\n          autocomplete=\"on\"\r\n        >\r\n          <template #prefix>\r\n            <el-icon><User /></el-icon>\r\n          </template>\r\n        </el-input>\r\n      </el-form-item>\r\n\r\n      <el-form-item prop=\"password\">\r\n        <el-input\r\n          v-model=\"loginForm.password\"\r\n          :type=\"passwordVisible ? 'text' : 'password'\"\r\n          placeholder=\"密码\"\r\n          tabindex=\"2\"\r\n          autocomplete=\"on\"\r\n          @keyup.enter=\"handleLogin\"\r\n        >\r\n          <template #prefix>\r\n            <el-icon><Lock /></el-icon>\r\n          </template>\r\n          <template #suffix>\r\n            <el-icon \r\n              class=\"password-icon\" \r\n              @click=\"passwordVisible = !passwordVisible\"\r\n            >\r\n              <View v-if=\"passwordVisible\" />\r\n              <Hide v-else />\r\n            </el-icon>\r\n          </template>\r\n        </el-input>\r\n      </el-form-item>\r\n\r\n      <el-button\r\n        :loading=\"loading\"\r\n        type=\"primary\"\r\n        class=\"login-button\"\r\n        @click=\"handleLogin\"\r\n      >\r\n        登录\r\n      </el-button>\r\n    </el-form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { defineComponent, ref, reactive } from 'vue'\r\nimport { useStore } from 'vuex'\r\nimport { useRouter, useRoute } from 'vue-router'\r\nimport { ElMessage } from 'element-plus'\r\nimport { User, Lock, View, Hide } from '@element-plus/icons-vue'\r\nimport request from '@/utils/request'\r\n\r\nexport default defineComponent({\r\n  name: 'Login',\r\n  components: {\r\n    User,\r\n    Lock,\r\n    View,\r\n    Hide\r\n  },\r\n  setup() {\r\n    const store = useStore()\r\n    const router = useRouter()\r\n    const route = useRoute()\r\n    const loginFormRef = ref(null)\r\n    const loading = ref(false)\r\n    const passwordVisible = ref(false)\r\n\r\n    const loginForm = reactive({\r\n      username: '',\r\n      password: ''\r\n    })\r\n\r\n    const loginRules = {\r\n      username: [\r\n        { required: true, message: '请输入用户名', trigger: 'blur' },\r\n        { min: 3, message: '用户名长度至少为3个字符', trigger: 'blur' }\r\n      ],\r\n      password: [\r\n        { required: true, message: '请输入密码', trigger: 'blur' },\r\n        { min: 6, message: '密码长度至少为6个字符', trigger: 'blur' }\r\n      ]\r\n    }\r\n\r\n    const handleLogin = () => {\r\n      loginFormRef.value?.validate(async (valid) => {\r\n        if (valid) {\r\n          try {\r\n            loading.value = true\r\n            await store.dispatch('user/login', {\r\n              username: loginForm.username,\r\n              password: loginForm.password\r\n            })\r\n            await store.dispatch('permission/generateRoutes')\r\n            ElMessage.success('登录成功')\r\n            const redirect = route.query.redirect || '/'\r\n            router.push({ path: redirect })\r\n          } catch (error) {\r\n            ElMessage.error(error.message || '登录失败')\r\n          } finally {\r\n            loading.value = false\r\n          }\r\n        }\r\n      })\r\n    }\r\n\r\n    const testApi = async () => {\r\n      try {\r\n        const res = await request({\r\n          url: '/debug/',\r\n          method: 'get'\r\n        })\r\n        console.log('Debug API response:', res)\r\n      } catch (error) {\r\n        console.log('Debug API error:', error)\r\n      }\r\n    }\r\n\r\n    return {\r\n      loginForm,\r\n      loginRules,\r\n      loginFormRef,\r\n      loading,\r\n      passwordVisible,\r\n      handleLogin,\r\n      testApi\r\n    }\r\n  }\r\n})\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.login-container {\r\n  min-height: 100vh;\r\n  width: 100%;\r\n  background-color: #2d3a4b;\r\n  overflow: hidden;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  .login-form {\r\n    width: 400px;\r\n    padding: 40px 35px;\r\n    background: #fff;\r\n    border-radius: 4px;\r\n    box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.1);\r\n\r\n    .title-container {\r\n      text-align: center;\r\n      margin-bottom: 30px;\r\n\r\n      .title {\r\n        font-size: 26px;\r\n        color: #333;\r\n        margin: 0;\r\n      }\r\n    }\r\n\r\n    :deep(.el-input) {\r\n      height: 48px;\r\n      \r\n      input {\r\n        height: 48px;\r\n        padding-left: 40px;\r\n        background: transparent;\r\n        \r\n        &:-webkit-autofill {\r\n          box-shadow: 0 0 0 1000px #fff inset !important;\r\n        }\r\n      }\r\n\r\n      .el-input__prefix {\r\n        left: 10px;\r\n        top: 0;\r\n        height: 100%;\r\n        color: #909399;\r\n      }\r\n    }\r\n\r\n    .password-icon {\r\n      cursor: pointer;\r\n      color: #909399;\r\n    }\r\n\r\n    .login-button {\r\n      width: 100%;\r\n      height: 48px;\r\n      margin-top: 10px;\r\n    }\r\n  }\r\n}\r\n</style> "],"mappings":"AAkEA,SAASA,eAAe,EAAEC,GAAG,EAAEC,QAAO,QAAS,KAAI;AACnD,SAASC,QAAO,QAAS,MAAK;AAC9B,SAASC,SAAS,EAAEC,QAAO,QAAS,YAAW;AAC/C,SAASC,SAAQ,QAAS,cAAa;AACvC,SAASC,IAAI,EAAEC,IAAI,EAAEC,IAAI,EAAEC,IAAG,QAAS,yBAAwB;AAC/D,OAAOC,OAAM,MAAO,iBAAgB;AAEpC,eAAeX,eAAe,CAAC;EAC7BY,IAAI,EAAE,OAAO;EACbC,UAAU,EAAE;IACVN,IAAI;IACJC,IAAI;IACJC,IAAI;IACJC;EACF,CAAC;EACDI,KAAKA,CAAA,EAAG;IACN,MAAMC,KAAI,GAAIZ,QAAQ,CAAC;IACvB,MAAMa,MAAK,GAAIZ,SAAS,CAAC;IACzB,MAAMa,KAAI,GAAIZ,QAAQ,CAAC;IACvB,MAAMa,YAAW,GAAIjB,GAAG,CAAC,IAAI;IAC7B,MAAMkB,OAAM,GAAIlB,GAAG,CAAC,KAAK;IACzB,MAAMmB,eAAc,GAAInB,GAAG,CAAC,KAAK;IAEjC,MAAMoB,SAAQ,GAAInB,QAAQ,CAAC;MACzBoB,QAAQ,EAAE,EAAE;MACZC,QAAQ,EAAE;IACZ,CAAC;IAED,MAAMC,UAAS,GAAI;MACjBF,QAAQ,EAAE,CACR;QAAEG,QAAQ,EAAE,IAAI;QAAEC,OAAO,EAAE,QAAQ;QAAEC,OAAO,EAAE;MAAO,CAAC,EACtD;QAAEC,GAAG,EAAE,CAAC;QAAEF,OAAO,EAAE,cAAc;QAAEC,OAAO,EAAE;MAAO,EACpD;MACDJ,QAAQ,EAAE,CACR;QAAEE,QAAQ,EAAE,IAAI;QAAEC,OAAO,EAAE,OAAO;QAAEC,OAAO,EAAE;MAAO,CAAC,EACrD;QAAEC,GAAG,EAAE,CAAC;QAAEF,OAAO,EAAE,aAAa;QAAEC,OAAO,EAAE;MAAO;IAEtD;IAEA,MAAME,WAAU,GAAIA,CAAA,KAAM;MACxBX,YAAY,CAACY,KAAK,EAAEC,QAAQ,CAAC,MAAOC,KAAK,IAAK;QAC5C,IAAIA,KAAK,EAAE;UACT,IAAI;YACFb,OAAO,CAACW,KAAI,GAAI,IAAG;YACnB,MAAMf,KAAK,CAACkB,QAAQ,CAAC,YAAY,EAAE;cACjCX,QAAQ,EAAED,SAAS,CAACC,QAAQ;cAC5BC,QAAQ,EAAEF,SAAS,CAACE;YACtB,CAAC;YACD,MAAMR,KAAK,CAACkB,QAAQ,CAAC,2BAA2B;YAChD3B,SAAS,CAAC4B,OAAO,CAAC,MAAM;YACxB,MAAMC,QAAO,GAAIlB,KAAK,CAACmB,KAAK,CAACD,QAAO,IAAK,GAAE;YAC3CnB,MAAM,CAACqB,IAAI,CAAC;cAAEC,IAAI,EAAEH;YAAS,CAAC;UAChC,EAAE,OAAOI,KAAK,EAAE;YACdjC,SAAS,CAACiC,KAAK,CAACA,KAAK,CAACb,OAAM,IAAK,MAAM;UACzC,UAAU;YACRP,OAAO,CAACW,KAAI,GAAI,KAAI;UACtB;QACF;MACF,CAAC;IACH;IAEA,MAAMU,OAAM,GAAI,MAAAA,CAAA,KAAY;MAC1B,IAAI;QACF,MAAMC,GAAE,GAAI,MAAM9B,OAAO,CAAC;UACxB+B,GAAG,EAAE,SAAS;UACdC,MAAM,EAAE;QACV,CAAC;QACDC,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEJ,GAAG;MACxC,EAAE,OAAOF,KAAK,EAAE;QACdK,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEN,KAAK;MACvC;IACF;IAEA,OAAO;MACLlB,SAAS;MACTG,UAAU;MACVN,YAAY;MACZC,OAAO;MACPC,eAAe;MACfS,WAAW;MACXW;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}