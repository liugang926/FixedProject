{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/ND/Desktop/Fixed_Project/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/ND/Desktop/Fixed_Project/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/es.array.is-array.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/es.string.trim.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport { login as _login, getInfo as _getInfo } from '@/api/user';\nimport { getToken, setToken, removeToken } from '@/utils/auth';\nimport { resetRouter } from '@/router';\nimport store from '@/store';\nimport router from '@/router';\nvar getDefaultState = function getDefaultState() {\n  return {\n    token: getToken(),\n    name: '',\n    avatar: '',\n    roles: [] // 初始化为空数组\n  };\n};\nvar state = getDefaultState();\nvar mutations = {\n  RESET_STATE: function RESET_STATE(state) {\n    Object.assign(state, getDefaultState());\n  },\n  SET_TOKEN: function SET_TOKEN(state, token) {\n    state.token = token;\n  },\n  SET_NAME: function SET_NAME(state, name) {\n    state.name = name;\n  },\n  SET_AVATAR: function SET_AVATAR(state, avatar) {\n    state.avatar = avatar;\n  },\n  SET_ROLES: function SET_ROLES(state, roles) {\n    state.roles = Array.isArray(roles) ? roles : [roles]; // 确保是数组\n  }\n};\nvar actions = {\n  // 登录\n  login: function login(_ref, userInfo) {\n    var commit = _ref.commit;\n    var username = userInfo.username,\n      password = userInfo.password;\n    return new Promise(function (resolve, reject) {\n      _login({\n        username: username.trim(),\n        password: password\n      }).then(/*#__PURE__*/function () {\n        var _ref2 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(response) {\n          var token, _yield$store$dispatch, roles, accessRoutes;\n          return _regeneratorRuntime().wrap(function _callee$(_context) {\n            while (1) switch (_context.prev = _context.next) {\n              case 0:\n                token = response.token;\n                commit('SET_TOKEN', token);\n                setToken(token);\n\n                // 登录后立即获取用户信息和生成路由\n                _context.prev = 3;\n                _context.next = 6;\n                return store.dispatch('user/getInfo');\n              case 6:\n                _yield$store$dispatch = _context.sent;\n                roles = _yield$store$dispatch.roles;\n                _context.next = 10;\n                return store.dispatch('permission/generateRoutes', roles);\n              case 10:\n                accessRoutes = _context.sent;\n                accessRoutes.forEach(function (route) {\n                  router.addRoute(route);\n                });\n                resolve(roles); // 返回角色信息\n                _context.next = 18;\n                break;\n              case 15:\n                _context.prev = 15;\n                _context.t0 = _context[\"catch\"](3);\n                reject(_context.t0);\n              case 18:\n              case \"end\":\n                return _context.stop();\n            }\n          }, _callee, null, [[3, 15]]);\n        }));\n        return function (_x) {\n          return _ref2.apply(this, arguments);\n        };\n      }())[\"catch\"](function (error) {\n        reject(error);\n      });\n    });\n  },\n  // 获取用户信息\n  getInfo: function getInfo(_ref3) {\n    var commit = _ref3.commit;\n    return new Promise(function (resolve, reject) {\n      _getInfo().then(function (response) {\n        if (!response) {\n          reject('验证失败，请重新登录');\n        }\n\n        // 设置默认角色为 admin（测试用）\n        var _response$roles = response.roles,\n          roles = _response$roles === void 0 ? ['admin'] : _response$roles,\n          name = response.name,\n          avatar = response.avatar;\n        if (!Array.isArray(roles)) {\n          reject('角色必须是数组!');\n        }\n        commit('SET_ROLES', roles);\n        commit('SET_NAME', name || 'Admin');\n        commit('SET_AVATAR', avatar || '');\n        resolve({\n          roles: roles,\n          name: name,\n          avatar: avatar\n        });\n      })[\"catch\"](function (error) {\n        reject(error);\n      });\n    });\n  },\n  // 登出\n  logout: function logout(_ref4) {\n    var commit = _ref4.commit,\n      dispatch = _ref4.dispatch;\n    return new Promise(function (resolve) {\n      Promise.all([dispatch('resetState', null, {\n        root: true\n      }),\n      // 清除根状态\n      dispatch('permission/resetRoutes', null, {\n        root: true\n      }),\n      // 清除权限路由\n      dispatch('app/resetState', null, {\n        root: true\n      }) // 清除应用状态\n      ]).then(function () {\n        // 移除 token\n        removeToken();\n        // 重置路由\n        resetRouter();\n        // 重置用户状态\n        commit('RESET_STATE');\n        resolve();\n      })[\"catch\"](function (error) {\n        console.error('Logout failed:', error);\n        resolve();\n      });\n    });\n  },\n  // 重置状态\n  resetState: function resetState(_ref5) {\n    var commit = _ref5.commit;\n    return new Promise(function (resolve) {\n      commit('RESET_STATE');\n      resolve();\n    });\n  },\n  // 重置 Token\n  resetToken: function resetToken(_ref6) {\n    var commit = _ref6.commit;\n    return new Promise(function (resolve) {\n      removeToken(); // 必须先移除 token\n      commit('RESET_STATE');\n      resolve();\n    });\n  }\n};\nexport default {\n  namespaced: true,\n  state: state,\n  mutations: mutations,\n  actions: actions\n};","map":{"version":3,"names":["login","getInfo","getToken","setToken","removeToken","resetRouter","store","router","getDefaultState","token","name","avatar","roles","state","mutations","RESET_STATE","Object","assign","SET_TOKEN","SET_NAME","SET_AVATAR","SET_ROLES","Array","isArray","actions","_ref","userInfo","commit","username","password","Promise","resolve","reject","trim","then","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","_yield$store$dispatch","accessRoutes","wrap","_callee$","_context","prev","next","dispatch","sent","forEach","route","addRoute","t0","stop","_x","apply","arguments","error","_ref3","_response$roles","logout","_ref4","all","root","console","resetState","_ref5","resetToken","_ref6","namespaced"],"sources":["C:/Users/ND/Desktop/Fixed_Project/frontend/src/store/modules/user.js"],"sourcesContent":["import { login, getInfo } from '@/api/user'\r\nimport { getToken, setToken, removeToken } from '@/utils/auth'\r\nimport { resetRouter } from '@/router'\r\nimport store from '@/store'\r\nimport router from '@/router'\r\n\r\nconst getDefaultState = () => {\r\n  return {\r\n    token: getToken(),\r\n    name: '',\r\n    avatar: '',\r\n    roles: []  // 初始化为空数组\r\n  }\r\n}\r\n\r\nconst state = getDefaultState()\r\n\r\nconst mutations = {\r\n  RESET_STATE: (state) => {\r\n    Object.assign(state, getDefaultState())\r\n  },\r\n  SET_TOKEN: (state, token) => {\r\n    state.token = token\r\n  },\r\n  SET_NAME: (state, name) => {\r\n    state.name = name\r\n  },\r\n  SET_AVATAR: (state, avatar) => {\r\n    state.avatar = avatar\r\n  },\r\n  SET_ROLES: (state, roles) => {\r\n    state.roles = Array.isArray(roles) ? roles : [roles]  // 确保是数组\r\n  }\r\n}\r\n\r\nconst actions = {\r\n  // 登录\r\n  login({ commit }, userInfo) {\r\n    const { username, password } = userInfo\r\n    return new Promise((resolve, reject) => {\r\n      login({ username: username.trim(), password: password })\r\n        .then(async response => {\r\n          const { token } = response\r\n          commit('SET_TOKEN', token)\r\n          setToken(token)\r\n          \r\n          // 登录后立即获取用户信息和生成路由\r\n          try {\r\n            const { roles } = await store.dispatch('user/getInfo')\r\n            const accessRoutes = await store.dispatch('permission/generateRoutes', roles)\r\n            accessRoutes.forEach(route => {\r\n              router.addRoute(route)\r\n            })\r\n            resolve(roles)  // 返回角色信息\r\n          } catch (error) {\r\n            reject(error)\r\n          }\r\n        })\r\n        .catch(error => {\r\n          reject(error)\r\n        })\r\n    })\r\n  },\r\n\r\n  // 获取用户信息\r\n  getInfo({ commit }) {\r\n    return new Promise((resolve, reject) => {\r\n      getInfo()\r\n        .then(response => {\r\n          if (!response) {\r\n            reject('验证失败，请重新登录')\r\n          }\r\n\r\n          // 设置默认角色为 admin（测试用）\r\n          const { roles = ['admin'], name, avatar } = response\r\n\r\n          if (!Array.isArray(roles)) {\r\n            reject('角色必须是数组!')\r\n          }\r\n\r\n          commit('SET_ROLES', roles)\r\n          commit('SET_NAME', name || 'Admin')\r\n          commit('SET_AVATAR', avatar || '')\r\n          resolve({ roles, name, avatar })\r\n        })\r\n        .catch(error => {\r\n          reject(error)\r\n        })\r\n    })\r\n  },\r\n\r\n  // 登出\r\n  logout({ commit, dispatch }) {\r\n    return new Promise(resolve => {\r\n      Promise.all([\r\n        dispatch('resetState', null, { root: true }),  // 清除根状态\r\n        dispatch('permission/resetRoutes', null, { root: true }),  // 清除权限路由\r\n        dispatch('app/resetState', null, { root: true })  // 清除应用状态\r\n      ])\r\n        .then(() => {\r\n          // 移除 token\r\n          removeToken()\r\n          // 重置路由\r\n          resetRouter()\r\n          // 重置用户状态\r\n          commit('RESET_STATE')\r\n          resolve()\r\n        })\r\n        .catch(error => {\r\n          console.error('Logout failed:', error)\r\n          resolve()\r\n        })\r\n    })\r\n  },\r\n\r\n  // 重置状态\r\n  resetState({ commit }) {\r\n    return new Promise(resolve => {\r\n      commit('RESET_STATE')\r\n      resolve()\r\n    })\r\n  },\r\n\r\n  // 重置 Token\r\n  resetToken({ commit }) {\r\n    return new Promise(resolve => {\r\n      removeToken() // 必须先移除 token\r\n      commit('RESET_STATE')\r\n      resolve()\r\n    })\r\n  }\r\n}\r\n\r\nexport default {\r\n  namespaced: true,\r\n  state,\r\n  mutations,\r\n  actions\r\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}