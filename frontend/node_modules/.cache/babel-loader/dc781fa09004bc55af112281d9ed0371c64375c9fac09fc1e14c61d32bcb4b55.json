{"ast":null,"code":"import \"core-js/modules/es.function.name.js\";\nimport { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createTextVNode as _createTextVNode, createBlock as _createBlock, createCommentVNode as _createCommentVNode, resolveDirective as _resolveDirective, withDirectives as _withDirectives } from \"vue\";\nvar _hoisted_1 = {\n  \"class\": \"app-container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_el_form_item = _resolveComponent(\"el-form-item\");\n  var _component_el_radio = _resolveComponent(\"el-radio\");\n  var _component_el_radio_group = _resolveComponent(\"el-radio-group\");\n  var _component_el_tree = _resolveComponent(\"el-tree\");\n  var _component_el_button = _resolveComponent(\"el-button\");\n  var _component_el_form = _resolveComponent(\"el-form\");\n  var _component_el_card = _resolveComponent(\"el-card\");\n  var _directive_loading = _resolveDirective(\"loading\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_el_card, {\n    \"class\": \"box-card\"\n  }, {\n    header: _withCtx(function () {\n      return _cache[1] || (_cache[1] = [_createElementVNode(\"div\", {\n        \"class\": \"card-header\"\n      }, [_createElementVNode(\"span\", null, \"数据权限配置\")], -1 /* HOISTED */)]);\n    }),\n    \"default\": _withCtx(function () {\n      return [_withDirectives((_openBlock(), _createBlock(_component_el_form, {\n        ref: \"form\",\n        model: _ctx.scopeForm,\n        \"label-width\": \"120px\"\n      }, {\n        \"default\": _withCtx(function () {\n          return [_createVNode(_component_el_form_item, {\n            label: \"角色名称\"\n          }, {\n            \"default\": _withCtx(function () {\n              return [_createElementVNode(\"span\", null, _toDisplayString(_ctx.currentRole.name), 1 /* TEXT */)];\n            }),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_form_item, {\n            label: \"数据范围\"\n          }, {\n            \"default\": _withCtx(function () {\n              return [_createVNode(_component_el_radio_group, {\n                modelValue: _ctx.scopeForm.scope,\n                \"onUpdate:modelValue\": _cache[0] || (_cache[0] = function ($event) {\n                  return _ctx.scopeForm.scope = $event;\n                })\n              }, {\n                \"default\": _withCtx(function () {\n                  return [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.scopeOptions, function (item) {\n                    return _openBlock(), _createBlock(_component_el_radio, {\n                      key: item.value,\n                      label: item.value\n                    }, {\n                      \"default\": _withCtx(function () {\n                        return [_createTextVNode(_toDisplayString(item.label), 1 /* TEXT */)];\n                      }),\n                      _: 2 /* DYNAMIC */\n                    }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"label\"]);\n                  }), 128 /* KEYED_FRAGMENT */))];\n                }),\n                _: 1 /* STABLE */\n              }, 8 /* PROPS */, [\"modelValue\"])];\n            }),\n            _: 1 /* STABLE */\n          }), _ctx.scopeForm.scope === 'custom' ? (_openBlock(), _createBlock(_component_el_form_item, {\n            key: 0,\n            label: \"自定义部门\"\n          }, {\n            \"default\": _withCtx(function () {\n              return [_createVNode(_component_el_tree, {\n                ref: \"deptTree\",\n                data: _ctx.departmentTree,\n                \"show-checkbox\": \"\",\n                \"node-key\": \"id\",\n                props: _ctx.defaultProps,\n                onCheck: _ctx.handleCheck\n              }, null, 8 /* PROPS */, [\"data\", \"props\", \"onCheck\"])];\n            }),\n            _: 1 /* STABLE */\n          })) : _createCommentVNode(\"v-if\", true), _createVNode(_component_el_form_item, null, {\n            \"default\": _withCtx(function () {\n              return [_createVNode(_component_el_button, {\n                type: \"primary\",\n                onClick: _ctx.handleSubmit,\n                loading: _ctx.submitting\n              }, {\n                \"default\": _withCtx(function () {\n                  return _cache[2] || (_cache[2] = [_createTextVNode(\" 保存配置 \")]);\n                }),\n                _: 1 /* STABLE */\n              }, 8 /* PROPS */, [\"onClick\", \"loading\"])];\n            }),\n            _: 1 /* STABLE */\n          })];\n        }),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"model\"])), [[_directive_loading, _ctx.loading]])];\n    }),\n    _: 1 /* STABLE */\n  })]);\n}","map":{"version":3,"names":["_createElementBlock","_hoisted_1","_createVNode","_component_el_card","header","_withCtx","_cache","_createElementVNode","_createBlock","_component_el_form","ref","model","_ctx","scopeForm","_component_el_form_item","label","_toDisplayString","currentRole","name","_","_component_el_radio_group","modelValue","scope","$event","_Fragment","_renderList","scopeOptions","item","_component_el_radio","key","value","_createTextVNode","_component_el_tree","data","departmentTree","props","defaultProps","onCheck","handleCheck","_createCommentVNode","_component_el_button","type","onClick","handleSubmit","loading","submitting"],"sources":["C:\\Users\\ND\\Desktop\\Fixed_Project\\frontend\\src\\views\\role\\dataScope.vue"],"sourcesContent":["<template>\r\n  <div class=\"app-container\">\r\n    <el-card class=\"box-card\">\r\n      <template #header>\r\n        <div class=\"card-header\">\r\n          <span>数据权限配置</span>\r\n        </div>\r\n      </template>\r\n      \r\n      <el-form\r\n        ref=\"form\"\r\n        :model=\"scopeForm\"\r\n        label-width=\"120px\"\r\n        v-loading=\"loading\"\r\n      >\r\n        <el-form-item label=\"角色名称\">\r\n          <span>{{ currentRole.name }}</span>\r\n        </el-form-item>\r\n        \r\n        <el-form-item label=\"数据范围\">\r\n          <el-radio-group v-model=\"scopeForm.scope\">\r\n            <el-radio\r\n              v-for=\"item in scopeOptions\"\r\n              :key=\"item.value\"\r\n              :label=\"item.value\"\r\n            >\r\n              {{ item.label }}\r\n            </el-radio>\r\n          </el-radio-group>\r\n        </el-form-item>\r\n        \r\n        <el-form-item\r\n          label=\"自定义部门\"\r\n          v-if=\"scopeForm.scope === 'custom'\"\r\n        >\r\n          <el-tree\r\n            ref=\"deptTree\"\r\n            :data=\"departmentTree\"\r\n            show-checkbox\r\n            node-key=\"id\"\r\n            :props=\"defaultProps\"\r\n            @check=\"handleCheck\"\r\n          />\r\n        </el-form-item>\r\n        \r\n        <el-form-item>\r\n          <el-button\r\n            type=\"primary\"\r\n            @click=\"handleSubmit\"\r\n            :loading=\"submitting\"\r\n          >\r\n            保存配置\r\n          </el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { defineComponent, ref, reactive, onMounted, nextTick } from 'vue'\r\nimport { useRoute } from 'vue-router'\r\nimport { ElMessage } from 'element-plus'\r\nimport { getDataScope, updateDataScope, getDepartmentTree } from '@/api/dataScope'\r\nimport { getRoleDetail } from '@/api/role'\r\n\r\nexport default defineComponent({\r\n  name: 'DataScope',\r\n  setup() {\r\n    const route = useRoute()\r\n    const loading = ref(false)\r\n    const submitting = ref(false)\r\n    const currentRole = ref({})\r\n    const departmentTree = ref([])\r\n    const deptTree = ref(null)\r\n    \r\n    // 表单数据\r\n    const scopeForm = reactive({\r\n      scope: 'personal',\r\n      departments: []\r\n    })\r\n    \r\n    // 数据范围选项\r\n    const scopeOptions = [\r\n      { label: '全部数据', value: 'all' },\r\n      { label: '本部门及以下数据', value: 'department_and_below' },\r\n      { label: '本部门数据', value: 'department' },\r\n      { label: '仅个人数据', value: 'personal' },\r\n      { label: '自定义数据', value: 'custom' }\r\n    ]\r\n    \r\n    // 部门树配置\r\n    const defaultProps = {\r\n      children: 'children',\r\n      label: 'name'\r\n    }\r\n    \r\n    // 获取角色信息\r\n    const getRoleInfo = async () => {\r\n      try {\r\n        const { data } = await getRoleDetail(route.params.id)\r\n        currentRole.value = data\r\n      } catch (error) {\r\n        console.error('Failed to get role info:', error)\r\n      }\r\n    }\r\n    \r\n    // 获取数据权限配置\r\n    const getScope = async () => {\r\n      loading.value = true\r\n      try {\r\n        const { data } = await getDataScope(route.params.id)\r\n        scopeForm.scope = data.scope\r\n        scopeForm.departments = data.departments || []\r\n        \r\n        // 设置选中的部门\r\n        if (scopeForm.scope === 'custom' && scopeForm.departments.length > 0) {\r\n          await nextTick()\r\n          if (deptTree.value) {\r\n            deptTree.value.setCheckedKeys(scopeForm.departments)\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.error('Failed to get data scope:', error)\r\n      }\r\n      loading.value = false\r\n    }\r\n    \r\n    // 获取部门树\r\n    const getDeptTree = async () => {\r\n      try {\r\n        const { data } = await getDepartmentTree()\r\n        departmentTree.value = data\r\n      } catch (error) {\r\n        console.error('Failed to get department tree:', error)\r\n      }\r\n    }\r\n    \r\n    // 处理部门选择\r\n    const handleCheck = (data, { checkedKeys }) => {\r\n      scopeForm.departments = checkedKeys\r\n    }\r\n    \r\n    // 提交配置\r\n    const handleSubmit = async () => {\r\n      submitting.value = true\r\n      try {\r\n        await updateDataScope(route.params.id, scopeForm)\r\n        ElMessage.success('配置保存成功')\r\n      } catch (error) {\r\n        console.error('Failed to update data scope:', error)\r\n        ElMessage.error('配置保存失败')\r\n      }\r\n      submitting.value = false\r\n    }\r\n    \r\n    onMounted(() => {\r\n      getRoleInfo()\r\n      getScope()\r\n      getDeptTree()\r\n    })\r\n    \r\n    return {\r\n      loading,\r\n      submitting,\r\n      currentRole,\r\n      scopeForm,\r\n      scopeOptions,\r\n      departmentTree,\r\n      defaultProps,\r\n      deptTree,\r\n      handleCheck,\r\n      handleSubmit\r\n    }\r\n  }\r\n})\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.card-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n\r\n.box-card {\r\n  width: 100%;\r\n  margin-bottom: 20px;\r\n}\r\n</style> "],"mappings":";;;EACO,SAAM;AAAe;;;;;;;;;;uBAA1BA,mBAAA,CAuDM,OAvDNC,UAuDM,GAtDJC,YAAA,CAqDUC,kBAAA;IArDD,SAAM;EAAU;IACZC,MAAM,EAAAC,QAAA,CACf;MAAA,OAEMC,MAAA,QAAAA,MAAA,OAFNC,mBAAA,CAEM;QAFD,SAAM;MAAa,IACtBA,mBAAA,CAAmB,cAAb,QAAM,E;;IALtB,WAAAF,QAAA,CASM;MAAA,OA6CU,C,+BA7CVG,YAAA,CA6CUC,kBAAA;QA5CRC,GAAG,EAAC,MAAM;QACTC,KAAK,EAAEC,IAAA,CAAAC,SAAS;QACjB,aAAW,EAAC;;QAZpB,WAAAR,QAAA,CAeQ;UAAA,OAEe,CAFfH,YAAA,CAEeY,uBAAA;YAFDC,KAAK,EAAC;UAAM;YAflC,WAAAV,QAAA,CAgBU;cAAA,OAAmC,CAAnCE,mBAAA,CAAmC,cAAAS,gBAAA,CAA1BJ,IAAA,CAAAK,WAAW,CAACC,IAAI,iB;;YAhBnCC,CAAA;cAmBQjB,YAAA,CAUeY,uBAAA;YAVDC,KAAK,EAAC;UAAM;YAnBlC,WAAAV,QAAA,CAoBU;cAAA,OAQiB,CARjBH,YAAA,CAQiBkB,yBAAA;gBA5B3BC,UAAA,EAoBmCT,IAAA,CAAAC,SAAS,CAACS,KAAK;gBApBlD,uBAAAhB,MAAA,QAAAA,MAAA,gBAAAiB,MAAA;kBAAA,OAoBmCX,IAAA,CAAAC,SAAS,CAACS,KAAK,GAAAC,MAAA;gBAAA;;gBApBlD,WAAAlB,QAAA,CAsBc;kBAAA,OAA4B,E,kBAD9BL,mBAAA,CAMWwB,SAAA,QA3BvBC,WAAA,CAsB6Bb,IAAA,CAAAc,YAAY,EAtBzC,UAsBqBC,IAAI;yCADbnB,YAAA,CAMWoB,mBAAA;sBAJRC,GAAG,EAAEF,IAAI,CAACG,KAAK;sBACff,KAAK,EAAEY,IAAI,CAACG;;sBAxB3B,WAAAzB,QAAA,CA0Bc;wBAAA,OAAgB,CA1B9B0B,gBAAA,CAAAf,gBAAA,CA0BiBW,IAAI,CAACZ,KAAK,iB;;sBA1B3BI,CAAA;;;;gBAAAA,CAAA;;;YAAAA,CAAA;cAiCgBP,IAAA,CAAAC,SAAS,CAACS,KAAK,iB,cAFvBd,YAAA,CAYeM,uBAAA;YA3CvBe,GAAA;YAgCUd,KAAK,EAAC;;YAhChB,WAAAV,QAAA,CAmCU;cAAA,OAOE,CAPFH,YAAA,CAOE8B,kBAAA;gBANAtB,GAAG,EAAC,UAAU;gBACbuB,IAAI,EAAErB,IAAA,CAAAsB,cAAc;gBACrB,eAAa,EAAb,EAAa;gBACb,UAAQ,EAAC,IAAI;gBACZC,KAAK,EAAEvB,IAAA,CAAAwB,YAAY;gBACnBC,OAAK,EAAEzB,IAAA,CAAA0B;;;YAzCpBnB,CAAA;gBAAAoB,mBAAA,gBA6CQrC,YAAA,CAQeY,uBAAA;YArDvB,WAAAT,QAAA,CA8CU;cAAA,OAMY,CANZH,YAAA,CAMYsC,oBAAA;gBALVC,IAAI,EAAC,SAAS;gBACbC,OAAK,EAAE9B,IAAA,CAAA+B,YAAY;gBACnBC,OAAO,EAAEhC,IAAA,CAAAiC;;gBAjDtB,WAAAxC,QAAA,CAkDW;kBAAA,OAEDC,MAAA,QAAAA,MAAA,OApDVyB,gBAAA,CAkDW,QAED,E;;gBApDVZ,CAAA;;;YAAAA,CAAA;;;QAAAA,CAAA;2DAamBP,IAAA,CAAAgC,OAAO,E;;IAb1BzB,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}