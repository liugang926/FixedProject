{"ast":null,"code":"import \"core-js/modules/es.object.to-string.js\";\nimport axios from 'axios';\nimport { ElMessage } from 'element-plus';\nimport store from '@/store';\nimport { getToken } from '@/utils/auth';\n\n// 创建axios实例\nvar service = axios.create({\n  baseURL: '/',\n  // 修改为根路径\n  timeout: 5000 // 请求超时时间\n});\n\n// 请求拦截器\nservice.interceptors.request.use(function (config) {\n  // 添加调试日志\n  console.log('Request URL:', config.url);\n  console.log('Request Method:', config.method);\n  if (store.state.user.token) {\n    config.headers['Authorization'] = 'Token ' + getToken();\n  }\n  return config;\n}, function (error) {\n  console.log(error);\n  return Promise.reject(error);\n});\n\n// 响应拦截器\nservice.interceptors.response.use(function (response) {\n  // 添加调试日志\n  console.log('Response:', response.data);\n  return response.data;\n}, function (error) {\n  console.log('Error:', error);\n  console.log('Error Response:', error.response);\n  var _ref = error.response || {},\n    status = _ref.status,\n    data = _ref.data;\n  if (status === 401) {\n    // token 过期或无效\n    ElMessage({\n      message: '登录已过期，请重新登录',\n      type: 'error',\n      duration: 5 * 1000\n    });\n    store.dispatch('user/resetToken').then(function () {\n      location.reload();\n    });\n  } else {\n    ElMessage({\n      message: (data === null || data === void 0 ? void 0 : data.error) || error.message || '请求失败',\n      type: 'error',\n      duration: 5 * 1000\n    });\n  }\n  return Promise.reject(error);\n});\nexport default service;","map":{"version":3,"names":["axios","ElMessage","store","getToken","service","create","baseURL","timeout","interceptors","request","use","config","console","log","url","method","state","user","token","headers","error","Promise","reject","response","data","_ref","status","message","type","duration","dispatch","then","location","reload"],"sources":["C:/Users/ND/Desktop/Fixed_Project/frontend/src/utils/request.js"],"sourcesContent":["import axios from 'axios'\r\nimport { ElMessage } from 'element-plus'\r\nimport store from '@/store'\r\nimport { getToken } from '@/utils/auth'\r\n\r\n// 创建axios实例\r\nconst service = axios.create({\r\n  baseURL: '/',  // 修改为根路径\r\n  timeout: 5000 // 请求超时时间\r\n})\r\n\r\n// 请求拦截器\r\nservice.interceptors.request.use(\r\n  config => {\r\n    // 添加调试日志\r\n    console.log('Request URL:', config.url)\r\n    console.log('Request Method:', config.method)\r\n    \r\n    if (store.state.user.token) {\r\n      config.headers['Authorization'] = 'Token ' + getToken()\r\n    }\r\n    return config\r\n  },\r\n  error => {\r\n    console.log(error)\r\n    return Promise.reject(error)\r\n  }\r\n)\r\n\r\n// 响应拦截器\r\nservice.interceptors.response.use(\r\n  response => {\r\n    // 添加调试日志\r\n    console.log('Response:', response.data)\r\n    return response.data\r\n  },\r\n  error => {\r\n    console.log('Error:', error)\r\n    console.log('Error Response:', error.response)\r\n    \r\n    const { status, data } = error.response || {}\r\n    \r\n    if (status === 401) {\r\n      // token 过期或无效\r\n      ElMessage({\r\n        message: '登录已过期，请重新登录',\r\n        type: 'error',\r\n        duration: 5 * 1000\r\n      })\r\n      store.dispatch('user/resetToken').then(() => {\r\n        location.reload()\r\n      })\r\n    } else {\r\n      ElMessage({\r\n        message: data?.error || error.message || '请求失败',\r\n        type: 'error',\r\n        duration: 5 * 1000\r\n      })\r\n    }\r\n    return Promise.reject(error)\r\n  }\r\n)\r\n\r\nexport default service "],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,cAAc;AACxC,OAAOC,KAAK,MAAM,SAAS;AAC3B,SAASC,QAAQ,QAAQ,cAAc;;AAEvC;AACA,IAAMC,OAAO,GAAGJ,KAAK,CAACK,MAAM,CAAC;EAC3BC,OAAO,EAAE,GAAG;EAAG;EACfC,OAAO,EAAE,IAAI,CAAC;AAChB,CAAC,CAAC;;AAEF;AACAH,OAAO,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CAC9B,UAAAC,MAAM,EAAI;EACR;EACAC,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEF,MAAM,CAACG,GAAG,CAAC;EACvCF,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEF,MAAM,CAACI,MAAM,CAAC;EAE7C,IAAIb,KAAK,CAACc,KAAK,CAACC,IAAI,CAACC,KAAK,EAAE;IAC1BP,MAAM,CAACQ,OAAO,CAAC,eAAe,CAAC,GAAG,QAAQ,GAAGhB,QAAQ,CAAC,CAAC;EACzD;EACA,OAAOQ,MAAM;AACf,CAAC,EACD,UAAAS,KAAK,EAAI;EACPR,OAAO,CAACC,GAAG,CAACO,KAAK,CAAC;EAClB,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACAhB,OAAO,CAACI,YAAY,CAACe,QAAQ,CAACb,GAAG,CAC/B,UAAAa,QAAQ,EAAI;EACV;EACAX,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEU,QAAQ,CAACC,IAAI,CAAC;EACvC,OAAOD,QAAQ,CAACC,IAAI;AACtB,CAAC,EACD,UAAAJ,KAAK,EAAI;EACPR,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEO,KAAK,CAAC;EAC5BR,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEO,KAAK,CAACG,QAAQ,CAAC;EAE9C,IAAAE,IAAA,GAAyBL,KAAK,CAACG,QAAQ,IAAI,CAAC,CAAC;IAArCG,MAAM,GAAAD,IAAA,CAANC,MAAM;IAAEF,IAAI,GAAAC,IAAA,CAAJD,IAAI;EAEpB,IAAIE,MAAM,KAAK,GAAG,EAAE;IAClB;IACAzB,SAAS,CAAC;MACR0B,OAAO,EAAE,aAAa;MACtBC,IAAI,EAAE,OAAO;MACbC,QAAQ,EAAE,CAAC,GAAG;IAChB,CAAC,CAAC;IACF3B,KAAK,CAAC4B,QAAQ,CAAC,iBAAiB,CAAC,CAACC,IAAI,CAAC,YAAM;MAC3CC,QAAQ,CAACC,MAAM,CAAC,CAAC;IACnB,CAAC,CAAC;EACJ,CAAC,MAAM;IACLhC,SAAS,CAAC;MACR0B,OAAO,EAAE,CAAAH,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEJ,KAAK,KAAIA,KAAK,CAACO,OAAO,IAAI,MAAM;MAC/CC,IAAI,EAAE,OAAO;MACbC,QAAQ,EAAE,CAAC,GAAG;IAChB,CAAC,CAAC;EACJ;EACA,OAAOR,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,eAAehB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}