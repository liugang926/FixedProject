{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, createBlock as _createBlock, withCtx as _withCtx, createVNode as _createVNode } from \"vue\";\nvar _hoisted_1 = {\n  \"class\": \"sidebar-container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_sidebar_item = _resolveComponent(\"sidebar-item\");\n  var _component_el_menu = _resolveComponent(\"el-menu\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_el_menu, {\n    \"default-active\": $options.activeMenu,\n    collapse: $options.isCollapse,\n    \"background-color\": $options.variables.menuBg,\n    \"text-color\": $options.variables.menuText,\n    \"active-text-color\": $options.variables.menuActiveText,\n    \"unique-opened\": false,\n    \"collapse-transition\": false,\n    mode: \"vertical\"\n  }, {\n    \"default\": _withCtx(function () {\n      return [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.routes, function (route) {\n        return _openBlock(), _createBlock(_component_sidebar_item, {\n          key: route.path,\n          item: route,\n          \"base-path\": route.path\n        }, null, 8 /* PROPS */, [\"item\", \"base-path\"]);\n      }), 128 /* KEYED_FRAGMENT */))];\n    }),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"default-active\", \"collapse\", \"background-color\", \"text-color\", \"active-text-color\"])]);\n}","map":{"version":3,"names":["_createElementBlock","_hoisted_1","_createVNode","_component_el_menu","$options","activeMenu","collapse","isCollapse","variables","menuBg","menuText","menuActiveText","mode","_withCtx","_Fragment","_renderList","routes","route","_createBlock","_component_sidebar_item","key","path","item","_"],"sources":["C:\\Users\\ND\\Desktop\\Fixed_Project\\frontend\\src\\layout\\components\\Sidebar\\index.vue"],"sourcesContent":["<template>\r\n  <div class=\"sidebar-container\">\r\n    <el-menu\r\n      :default-active=\"activeMenu\"\r\n      :collapse=\"isCollapse\"\r\n      :background-color=\"variables.menuBg\"\r\n      :text-color=\"variables.menuText\"\r\n      :active-text-color=\"variables.menuActiveText\"\r\n      :unique-opened=\"false\"\r\n      :collapse-transition=\"false\"\r\n      mode=\"vertical\"\r\n    >\r\n      <sidebar-item\r\n        v-for=\"route in routes\"\r\n        :key=\"route.path\"\r\n        :item=\"route\"\r\n        :base-path=\"route.path\"\r\n      />\r\n    </el-menu>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapGetters } from 'vuex'\r\nimport SidebarItem from './SidebarItem'\r\nimport variables from '@/styles/variables.scss'\r\n\r\nexport default {\r\n  name: 'Sidebar',\r\n  components: { SidebarItem },\r\n  computed: {\r\n    ...mapGetters([\r\n      'permission_routes',\r\n      'sidebar'\r\n    ]),\r\n    routes() {\r\n      return this.permission_routes\r\n    },\r\n    activeMenu() {\r\n      const route = this.$route\r\n      const { meta, path } = route\r\n      if (meta.activeMenu) {\r\n        return meta.activeMenu\r\n      }\r\n      return path\r\n    },\r\n    variables() {\r\n      return variables\r\n    },\r\n    isCollapse() {\r\n      return !this.sidebar.opened\r\n    }\r\n  }\r\n}\r\n</script> "],"mappings":";;EACO,SAAM;AAAmB;;;;uBAA9BA,mBAAA,CAkBM,OAlBNC,UAkBM,GAjBJC,YAAA,CAgBUC,kBAAA;IAfP,gBAAc,EAAEC,QAAA,CAAAC,UAAU;IAC1BC,QAAQ,EAAEF,QAAA,CAAAG,UAAU;IACpB,kBAAgB,EAAEH,QAAA,CAAAI,SAAS,CAACC,MAAM;IAClC,YAAU,EAAEL,QAAA,CAAAI,SAAS,CAACE,QAAQ;IAC9B,mBAAiB,EAAEN,QAAA,CAAAI,SAAS,CAACG,cAAc;IAC3C,eAAa,EAAE,KAAK;IACpB,qBAAmB,EAAE,KAAK;IAC3BC,IAAI,EAAC;;IAVX,WAAAC,QAAA,CAaQ;MAAA,OAAuB,E,kBADzBb,mBAAA,CAKEc,SAAA,QAjBRC,WAAA,CAawBX,QAAA,CAAAY,MAAM,EAb9B,UAaeC,KAAK;6BADdC,YAAA,CAKEC,uBAAA;UAHCC,GAAG,EAAEH,KAAK,CAACI,IAAI;UACfC,IAAI,EAAEL,KAAK;UACX,WAAS,EAAEA,KAAK,CAACI;;;;IAhB1BE,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}