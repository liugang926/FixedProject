{"ast":null,"code":"import { defineComponent } from 'vue';\nimport { useRouter } from 'vue-router';\nimport path from 'path-browserify';\nexport default defineComponent({\n  name: 'SidebarItem',\n  props: {\n    item: {\n      type: Object,\n      required: true\n    },\n    basePath: {\n      type: String,\n      default: ''\n    }\n  },\n  setup(props) {\n    const router = useRouter();\n    const hasChildren = route => {\n      return route.children && route.children.length > 0;\n    };\n    const resolvePath = routePath => {\n      return path.resolve(props.basePath, routePath);\n    };\n    const handleLink = item => {\n      const {\n        path\n      } = item;\n      router.push(resolvePath(path));\n    };\n    const toIcon = icon => {\n      if (!icon) return '';\n      // 移除 'el-icon-' 前缀，并将首字母大写\n      return icon.replace('el-icon-', '').split('-').map(word => word.charAt(0).toUpperCase() + word.slice(1)).join('');\n    };\n    return {\n      hasChildren,\n      resolvePath,\n      handleLink,\n      toIcon\n    };\n  }\n});","map":{"version":3,"names":["defineComponent","useRouter","path","name","props","item","type","Object","required","basePath","String","default","setup","router","hasChildren","route","children","length","resolvePath","routePath","resolve","handleLink","push","toIcon","icon","replace","split","map","word","charAt","toUpperCase","slice","join"],"sources":["C:\\Users\\ND\\Desktop\\Fixed_Project\\frontend\\src\\components\\layout\\SidebarItem.vue"],"sourcesContent":["<template>\r\n  <div v-if=\"!item.hidden\">\r\n    <!-- 没有子菜单的情况 -->\r\n    <template v-if=\"!hasChildren(item)\">\r\n      <el-menu-item :index=\"resolvePath(item.path)\" @click=\"handleLink(item)\">\r\n        <el-icon v-if=\"item.meta && item.meta.icon\">\r\n          <component :is=\"toIcon(item.meta.icon)\" />\r\n        </el-icon>\r\n        <template #title>\r\n          <span>{{ item.meta.title }}</span>\r\n        </template>\r\n      </el-menu-item>\r\n    </template>\r\n\r\n    <!-- 有子菜单的情况 -->\r\n    <el-sub-menu v-else :index=\"resolvePath(item.path)\">\r\n      <template #title>\r\n        <el-icon v-if=\"item.meta && item.meta.icon\">\r\n          <component :is=\"item.meta.icon\" />\r\n        </el-icon>\r\n        <span>{{ item.meta.title }}</span>\r\n      </template>\r\n      \r\n      <sidebar-item\r\n        v-for=\"child in item.children\"\r\n        :key=\"child.path\"\r\n        :item=\"child\"\r\n        :base-path=\"resolvePath(item.path)\"\r\n      />\r\n    </el-sub-menu>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { defineComponent } from 'vue'\r\nimport { useRouter } from 'vue-router'\r\nimport path from 'path-browserify'\r\n\r\nexport default defineComponent({\r\n  name: 'SidebarItem',\r\n  props: {\r\n    item: {\r\n      type: Object,\r\n      required: true\r\n    },\r\n    basePath: {\r\n      type: String,\r\n      default: ''\r\n    }\r\n  },\r\n  setup(props) {\r\n    const router = useRouter()\r\n\r\n    const hasChildren = (route) => {\r\n      return route.children && route.children.length > 0\r\n    }\r\n\r\n    const resolvePath = (routePath) => {\r\n      return path.resolve(props.basePath, routePath)\r\n    }\r\n\r\n    const handleLink = (item) => {\r\n      const { path } = item\r\n      router.push(resolvePath(path))\r\n    }\r\n\r\n    const toIcon = (icon) => {\r\n      if (!icon) return ''\r\n      // 移除 'el-icon-' 前缀，并将首字母大写\r\n      return icon.replace('el-icon-', '')\r\n        .split('-')\r\n        .map(word => word.charAt(0).toUpperCase() + word.slice(1))\r\n        .join('')\r\n    }\r\n\r\n    return {\r\n      hasChildren,\r\n      resolvePath,\r\n      handleLink,\r\n      toIcon\r\n    }\r\n  }\r\n})\r\n</script> "],"mappings":"AAkCA,SAASA,eAAc,QAAS,KAAI;AACpC,SAASC,SAAQ,QAAS,YAAW;AACrC,OAAOC,IAAG,MAAO,iBAAgB;AAEjC,eAAeF,eAAe,CAAC;EAC7BG,IAAI,EAAE,aAAa;EACnBC,KAAK,EAAE;IACLC,IAAI,EAAE;MACJC,IAAI,EAAEC,MAAM;MACZC,QAAQ,EAAE;IACZ,CAAC;IACDC,QAAQ,EAAE;MACRH,IAAI,EAAEI,MAAM;MACZC,OAAO,EAAE;IACX;EACF,CAAC;EACDC,KAAKA,CAACR,KAAK,EAAE;IACX,MAAMS,MAAK,GAAIZ,SAAS,CAAC;IAEzB,MAAMa,WAAU,GAAKC,KAAK,IAAK;MAC7B,OAAOA,KAAK,CAACC,QAAO,IAAKD,KAAK,CAACC,QAAQ,CAACC,MAAK,GAAI;IACnD;IAEA,MAAMC,WAAU,GAAKC,SAAS,IAAK;MACjC,OAAOjB,IAAI,CAACkB,OAAO,CAAChB,KAAK,CAACK,QAAQ,EAAEU,SAAS;IAC/C;IAEA,MAAME,UAAS,GAAKhB,IAAI,IAAK;MAC3B,MAAM;QAAEH;MAAK,IAAIG,IAAG;MACpBQ,MAAM,CAACS,IAAI,CAACJ,WAAW,CAAChB,IAAI,CAAC;IAC/B;IAEA,MAAMqB,MAAK,GAAKC,IAAI,IAAK;MACvB,IAAI,CAACA,IAAI,EAAE,OAAO,EAAC;MACnB;MACA,OAAOA,IAAI,CAACC,OAAO,CAAC,UAAU,EAAE,EAAE,EAC/BC,KAAK,CAAC,GAAG,EACTC,GAAG,CAACC,IAAG,IAAKA,IAAI,CAACC,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,IAAIF,IAAI,CAACG,KAAK,CAAC,CAAC,CAAC,EACxDC,IAAI,CAAC,EAAE;IACZ;IAEA,OAAO;MACLlB,WAAW;MACXI,WAAW;MACXG,UAAU;MACVE;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}