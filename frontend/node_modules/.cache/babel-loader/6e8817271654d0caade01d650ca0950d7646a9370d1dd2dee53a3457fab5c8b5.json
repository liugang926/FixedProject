{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, withKeys as _withKeys, openBlock as _openBlock, createBlock as _createBlock, resolveDynamicComponent as _resolveDynamicComponent, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, withModifiers as _withModifiers, createElementBlock as _createElementBlock } from \"vue\";\nvar _hoisted_1 = {\n  \"class\": \"login-container\"\n};\nvar _hoisted_2 = {\n  \"class\": \"svg-container\"\n};\nvar _hoisted_3 = {\n  \"class\": \"svg-container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_User = _resolveComponent(\"User\");\n  var _component_el_icon = _resolveComponent(\"el-icon\");\n  var _component_el_input = _resolveComponent(\"el-input\");\n  var _component_el_form_item = _resolveComponent(\"el-form-item\");\n  var _component_Lock = _resolveComponent(\"Lock\");\n  var _component_el_button = _resolveComponent(\"el-button\");\n  var _component_el_form = _resolveComponent(\"el-form\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_el_form, {\n    ref: \"loginFormRef\",\n    model: _ctx.loginForm,\n    rules: _ctx.loginRules,\n    \"class\": \"login-form\",\n    autocomplete: \"on\"\n  }, {\n    \"default\": _withCtx(function () {\n      return [_cache[3] || (_cache[3] = _createElementVNode(\"div\", {\n        \"class\": \"title-container\"\n      }, [_createElementVNode(\"h3\", {\n        \"class\": \"title\"\n      }, \"资产管理系统\")], -1 /* HOISTED */)), _createVNode(_component_el_form_item, {\n        prop: \"username\"\n      }, {\n        \"default\": _withCtx(function () {\n          return [_createElementVNode(\"span\", _hoisted_2, [_createVNode(_component_el_icon, null, {\n            \"default\": _withCtx(function () {\n              return [_createVNode(_component_User)];\n            }),\n            _: 1 /* STABLE */\n          })]), _createVNode(_component_el_input, {\n            ref: \"usernameRef\",\n            modelValue: _ctx.loginForm.username,\n            \"onUpdate:modelValue\": _cache[0] || (_cache[0] = function ($event) {\n              return _ctx.loginForm.username = $event;\n            }),\n            placeholder: \"请输入用户名\",\n            name: \"username\",\n            type: \"text\",\n            tabindex: \"1\",\n            \"auto-complete\": \"on\",\n            clearable: \"\"\n          }, null, 8 /* PROPS */, [\"modelValue\"])];\n        }),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, {\n        prop: \"password\"\n      }, {\n        \"default\": _withCtx(function () {\n          return [_createElementVNode(\"span\", _hoisted_3, [_createVNode(_component_el_icon, null, {\n            \"default\": _withCtx(function () {\n              return [_createVNode(_component_Lock)];\n            }),\n            _: 1 /* STABLE */\n          })]), (_openBlock(), _createBlock(_component_el_input, {\n            key: _ctx.passwordType,\n            ref: \"passwordRef\",\n            modelValue: _ctx.loginForm.password,\n            \"onUpdate:modelValue\": _cache[1] || (_cache[1] = function ($event) {\n              return _ctx.loginForm.password = $event;\n            }),\n            type: _ctx.passwordType,\n            placeholder: \"请输入密码\",\n            name: \"password\",\n            tabindex: \"2\",\n            \"auto-complete\": \"on\",\n            onKeyup: _withKeys(_ctx.handleLogin, [\"enter\"])\n          }, null, 8 /* PROPS */, [\"modelValue\", \"type\", \"onKeyup\"])), _createElementVNode(\"span\", {\n            \"class\": \"show-pwd\",\n            onClick: _cache[2] || (_cache[2] = function () {\n              return _ctx.showPwd && _ctx.showPwd.apply(_ctx, arguments);\n            })\n          }, [_createVNode(_component_el_icon, null, {\n            \"default\": _withCtx(function () {\n              return [(_openBlock(), _createBlock(_resolveDynamicComponent(_ctx.passwordType === 'password' ? 'Hide' : 'View')))];\n            }),\n            _: 1 /* STABLE */\n          })])];\n        }),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_button, {\n        loading: _ctx.loading,\n        type: \"primary\",\n        \"class\": \"login-button\",\n        onClick: _withModifiers(_ctx.handleLogin, [\"prevent\"])\n      }, {\n        \"default\": _withCtx(function () {\n          return [_createTextVNode(_toDisplayString(_ctx.loading ? '登录中...' : '登录'), 1 /* TEXT */)];\n        }),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"loading\", \"onClick\"])];\n    }),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"model\", \"rules\"])]);\n}","map":{"version":3,"names":["_createElementBlock","_hoisted_1","_createVNode","_component_el_form","ref","model","_ctx","loginForm","rules","loginRules","autocomplete","_withCtx","_createElementVNode","_component_el_form_item","prop","_hoisted_2","_component_el_icon","_component_User","_","_component_el_input","modelValue","username","_cache","$event","placeholder","name","type","tabindex","clearable","_hoisted_3","_component_Lock","_createBlock","key","passwordType","password","onKeyup","_withKeys","handleLogin","onClick","showPwd","apply","arguments","_resolveDynamicComponent","_component_el_button","loading","_withModifiers","_createTextVNode","_toDisplayString"],"sources":["C:\\Users\\ND\\Desktop\\Fixed_Project\\frontend\\src\\views\\login\\Login.vue"],"sourcesContent":["<template>\r\n  <div class=\"login-container\">\r\n    <el-form\r\n      ref=\"loginFormRef\"\r\n      :model=\"loginForm\"\r\n      :rules=\"loginRules\"\r\n      class=\"login-form\"\r\n      autocomplete=\"on\"\r\n    >\r\n      <div class=\"title-container\">\r\n        <h3 class=\"title\">资产管理系统</h3>\r\n      </div>\r\n\r\n      <el-form-item prop=\"username\">\r\n        <span class=\"svg-container\">\r\n          <el-icon><User /></el-icon>\r\n        </span>\r\n        <el-input\r\n          ref=\"usernameRef\"\r\n          v-model=\"loginForm.username\"\r\n          placeholder=\"请输入用户名\"\r\n          name=\"username\"\r\n          type=\"text\"\r\n          tabindex=\"1\"\r\n          auto-complete=\"on\"\r\n          clearable\r\n        />\r\n      </el-form-item>\r\n\r\n      <el-form-item prop=\"password\">\r\n        <span class=\"svg-container\">\r\n          <el-icon><Lock /></el-icon>\r\n        </span>\r\n        <el-input\r\n          :key=\"passwordType\"\r\n          ref=\"passwordRef\"\r\n          v-model=\"loginForm.password\"\r\n          :type=\"passwordType\"\r\n          placeholder=\"请输入密码\"\r\n          name=\"password\"\r\n          tabindex=\"2\"\r\n          auto-complete=\"on\"\r\n          @keyup.enter=\"handleLogin\"\r\n        />\r\n        <span class=\"show-pwd\" @click=\"showPwd\">\r\n          <el-icon>\r\n            <component :is=\"passwordType === 'password' ? 'Hide' : 'View'\" />\r\n          </el-icon>\r\n        </span>\r\n      </el-form-item>\r\n\r\n      <el-button\r\n        :loading=\"loading\"\r\n        type=\"primary\"\r\n        class=\"login-button\"\r\n        @click.prevent=\"handleLogin\"\r\n      >\r\n        {{ loading ? '登录中...' : '登录' }}\r\n      </el-button>\r\n    </el-form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { defineComponent, ref, reactive, nextTick } from 'vue'\r\nimport { useStore } from 'vuex'\r\nimport { useRouter, useRoute } from 'vue-router'\r\nimport { ElMessage } from 'element-plus'\r\nimport { User, Lock, View, Hide } from '@element-plus/icons-vue'\r\n\r\nexport default defineComponent({\r\n  name: 'Login',\r\n  components: { User, Lock, View, Hide },\r\n  setup() {\r\n    const store = useStore()\r\n    const router = useRouter()\r\n    const route = useRoute()\r\n\r\n    const loginFormRef = ref(null)\r\n    const usernameRef = ref(null)\r\n    const passwordRef = ref(null)\r\n\r\n    const loginForm = reactive({\r\n      username: '',\r\n      password: ''\r\n    })\r\n\r\n    const loginRules = {\r\n      username: [\r\n        { required: true, trigger: 'blur', message: '请输入用户名' },\r\n        { min: 4, max: 20, message: '用户名长度在 4 到 20 个字符', trigger: 'blur' }\r\n      ],\r\n      password: [\r\n        { required: true, trigger: 'blur', message: '请输入密码' },\r\n        { min: 6, message: '密码长度不能小于6个字符', trigger: 'blur' }\r\n      ]\r\n    }\r\n\r\n    const loading = ref(false)\r\n    const passwordType = ref('password')\r\n\r\n    const showPwd = () => {\r\n      passwordType.value = passwordType.value === 'password' ? '' : 'password'\r\n      nextTick(() => {\r\n        passwordRef.value.focus()\r\n      })\r\n    }\r\n\r\n    const handleLogin = () => {\r\n      if (!loginFormRef.value) return\r\n      \r\n      loginFormRef.value.validate(async valid => {\r\n        if (valid) {\r\n          loading.value = true\r\n          try {\r\n            await store.dispatch('user/login', loginForm)\r\n            const redirect = route.query.redirect || '/dashboard'\r\n            router.replace(redirect)\r\n            ElMessage.success('登录成功')\r\n          } catch (error) {\r\n            console.error('Login failed:', error)\r\n            ElMessage.error(error.response?.data?.error || '登录失败，请检查用户名和密码')\r\n          } finally {\r\n            loading.value = false\r\n          }\r\n        }\r\n      })\r\n    }\r\n\r\n    return {\r\n      loginForm,\r\n      loginFormRef,\r\n      loginRules,\r\n      loading,\r\n      passwordType,\r\n      showPwd,\r\n      handleLogin,\r\n      usernameRef,\r\n      passwordRef\r\n    }\r\n  }\r\n})\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n$bg: #2d3a4b;\r\n$cursor: #fff;\r\n$dark-gray: #889aa4;\r\n$light-gray: #eee;\r\n\r\n.login-container {\r\n  min-height: 100vh;\r\n  width: 100%;\r\n  background-color: $bg;\r\n  overflow: hidden;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  .login-form {\r\n    position: relative;\r\n    width: 520px;\r\n    max-width: 100%;\r\n    padding: 160px 35px 0;\r\n    margin: 0 auto;\r\n    overflow: hidden;\r\n    background: rgba(0, 0, 0, 0.1);\r\n    border-radius: 10px;\r\n    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\r\n  }\r\n\r\n  .title-container {\r\n    position: relative;\r\n    margin-bottom: 40px;\r\n    text-align: center;\r\n\r\n    .title {\r\n      font-size: 26px;\r\n      color: $light-gray;\r\n      margin: 0;\r\n      font-weight: bold;\r\n      text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.3);\r\n    }\r\n  }\r\n\r\n  .svg-container {\r\n    padding: 6px 5px 6px 15px;\r\n    color: $dark-gray;\r\n    vertical-align: middle;\r\n    display: inline-block;\r\n    width: 30px;\r\n    text-align: center;\r\n  }\r\n\r\n  .show-pwd {\r\n    position: absolute;\r\n    right: 10px;\r\n    top: 7px;\r\n    font-size: 16px;\r\n    color: $dark-gray;\r\n    cursor: pointer;\r\n    user-select: none;\r\n    transition: color 0.3s;\r\n\r\n    &:hover {\r\n      color: $light-gray;\r\n    }\r\n  }\r\n\r\n  .el-form-item {\r\n    border: 1px solid rgba(255, 255, 255, 0.1);\r\n    background: rgba(0, 0, 0, 0.1);\r\n    border-radius: 5px;\r\n    color: #454545;\r\n    margin-bottom: 20px;\r\n\r\n    &:hover {\r\n      border-color: rgba(255, 255, 255, 0.2);\r\n    }\r\n  }\r\n\r\n  .el-input {\r\n    display: inline-block;\r\n    height: 47px;\r\n    width: calc(100% - 40px);\r\n\r\n    input {\r\n      background: transparent;\r\n      border: 0;\r\n      -webkit-appearance: none;\r\n      border-radius: 0;\r\n      padding: 12px 5px 12px 15px;\r\n      color: $light-gray;\r\n      height: 47px;\r\n      caret-color: $cursor;\r\n\r\n      &:-webkit-autofill {\r\n        box-shadow: 0 0 0 1000px $bg inset !important;\r\n        -webkit-text-fill-color: $light-gray !important;\r\n      }\r\n    }\r\n  }\r\n\r\n  .login-button {\r\n    width: 100%;\r\n    margin-bottom: 30px;\r\n    padding: 12px 15px;\r\n    font-size: 16px;\r\n    \r\n    &:focus,\r\n    &:hover {\r\n      opacity: 0.9;\r\n    }\r\n  }\r\n}\r\n\r\n@media screen and (max-width: 520px) {\r\n  .login-container {\r\n    .login-form {\r\n      padding: 100px 15px 0;\r\n      margin: 0 20px;\r\n    }\r\n  }\r\n}\r\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}