{"ast":null,"code":"import \"core-js/modules/es.object.to-string.js\";\nimport axios from 'axios';\nimport { ElMessage } from 'element-plus';\nimport store from '@/store';\nimport { getToken } from '@/utils/auth';\n\n// 创建axios实例\nvar service = axios.create({\n  baseURL: process.env.VUE_APP_BASE_API || '/api',\n  // url = base url + request url\n  timeout: 5000 // 请求超时时间\n});\n\n// 请求拦截器\nservice.interceptors.request.use(function (config) {\n  // 在发送请求之前做些什么\n  if (store.state.user.token) {\n    // 让每个请求携带token\n    config.headers['Authorization'] = \"Token \".concat(getToken());\n  }\n  return config;\n}, function (error) {\n  // 处理请求错误\n  console.log(error);\n  return Promise.reject(error);\n});\n\n// 响应拦截器\nservice.interceptors.response.use(function (response) {\n  var res = response.data;\n\n  // Django REST framework 返回的数据直接使用\n  return res;\n}, function (error) {\n  var _error$config, _error$config2, _error$config3, _error$response;\n  console.log('Request Error:', {\n    config: error.config,\n    response: error.response,\n    url: (_error$config = error.config) === null || _error$config === void 0 ? void 0 : _error$config.url,\n    method: (_error$config2 = error.config) === null || _error$config2 === void 0 ? void 0 : _error$config2.method,\n    data: (_error$config3 = error.config) === null || _error$config3 === void 0 ? void 0 : _error$config3.data\n  });\n  ElMessage({\n    message: ((_error$response = error.response) === null || _error$response === void 0 || (_error$response = _error$response.data) === null || _error$response === void 0 ? void 0 : _error$response.detail) || error.message || '请求失败',\n    type: 'error',\n    duration: 5 * 1000\n  });\n  return Promise.reject(error);\n});\nexport default service;","map":{"version":3,"names":["axios","ElMessage","store","getToken","service","create","baseURL","process","env","VUE_APP_BASE_API","timeout","interceptors","request","use","config","state","user","token","headers","concat","error","console","log","Promise","reject","response","res","data","_error$config","_error$config2","_error$config3","_error$response","url","method","message","detail","type","duration"],"sources":["C:/Users/ND/Desktop/Fixed_Project/frontend/src/utils/request.js"],"sourcesContent":["import axios from 'axios'\r\nimport { ElMessage } from 'element-plus'\r\nimport store from '@/store'\r\nimport { getToken } from '@/utils/auth'\r\n\r\n// 创建axios实例\r\nconst service = axios.create({\r\n  baseURL: process.env.VUE_APP_BASE_API || '/api', // url = base url + request url\r\n  timeout: 5000 // 请求超时时间\r\n})\r\n\r\n// 请求拦截器\r\nservice.interceptors.request.use(\r\n  config => {\r\n    // 在发送请求之前做些什么\r\n    if (store.state.user.token) {\r\n      // 让每个请求携带token\r\n      config.headers['Authorization'] = `Token ${getToken()}`\r\n    }\r\n    return config\r\n  },\r\n  error => {\r\n    // 处理请求错误\r\n    console.log(error)\r\n    return Promise.reject(error)\r\n  }\r\n)\r\n\r\n// 响应拦截器\r\nservice.interceptors.response.use(\r\n  response => {\r\n    const res = response.data\r\n    \r\n    // Django REST framework 返回的数据直接使用\r\n    return res\r\n  },\r\n  error => {\r\n    console.log('Request Error:', {\r\n      config: error.config,\r\n      response: error.response,\r\n      url: error.config?.url,\r\n      method: error.config?.method,\r\n      data: error.config?.data\r\n    })\r\n    ElMessage({\r\n      message: error.response?.data?.detail || error.message || '请求失败',\r\n      type: 'error',\r\n      duration: 5 * 1000\r\n    })\r\n    return Promise.reject(error)\r\n  }\r\n)\r\n\r\nexport default service "],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,cAAc;AACxC,OAAOC,KAAK,MAAM,SAAS;AAC3B,SAASC,QAAQ,QAAQ,cAAc;;AAEvC;AACA,IAAMC,OAAO,GAAGJ,KAAK,CAACK,MAAM,CAAC;EAC3BC,OAAO,EAAEC,OAAO,CAACC,GAAG,CAACC,gBAAgB,IAAI,MAAM;EAAE;EACjDC,OAAO,EAAE,IAAI,CAAC;AAChB,CAAC,CAAC;;AAEF;AACAN,OAAO,CAACO,YAAY,CAACC,OAAO,CAACC,GAAG,CAC9B,UAAAC,MAAM,EAAI;EACR;EACA,IAAIZ,KAAK,CAACa,KAAK,CAACC,IAAI,CAACC,KAAK,EAAE;IAC1B;IACAH,MAAM,CAACI,OAAO,CAAC,eAAe,CAAC,YAAAC,MAAA,CAAYhB,QAAQ,CAAC,CAAC,CAAE;EACzD;EACA,OAAOW,MAAM;AACf,CAAC,EACD,UAAAM,KAAK,EAAI;EACP;EACAC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EAClB,OAAOG,OAAO,CAACC,MAAM,CAACJ,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACAhB,OAAO,CAACO,YAAY,CAACc,QAAQ,CAACZ,GAAG,CAC/B,UAAAY,QAAQ,EAAI;EACV,IAAMC,GAAG,GAAGD,QAAQ,CAACE,IAAI;;EAEzB;EACA,OAAOD,GAAG;AACZ,CAAC,EACD,UAAAN,KAAK,EAAI;EAAA,IAAAQ,aAAA,EAAAC,cAAA,EAAAC,cAAA,EAAAC,eAAA;EACPV,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAE;IAC5BR,MAAM,EAAEM,KAAK,CAACN,MAAM;IACpBW,QAAQ,EAAEL,KAAK,CAACK,QAAQ;IACxBO,GAAG,GAAAJ,aAAA,GAAER,KAAK,CAACN,MAAM,cAAAc,aAAA,uBAAZA,aAAA,CAAcI,GAAG;IACtBC,MAAM,GAAAJ,cAAA,GAAET,KAAK,CAACN,MAAM,cAAAe,cAAA,uBAAZA,cAAA,CAAcI,MAAM;IAC5BN,IAAI,GAAAG,cAAA,GAAEV,KAAK,CAACN,MAAM,cAAAgB,cAAA,uBAAZA,cAAA,CAAcH;EACtB,CAAC,CAAC;EACF1B,SAAS,CAAC;IACRiC,OAAO,EAAE,EAAAH,eAAA,GAAAX,KAAK,CAACK,QAAQ,cAAAM,eAAA,gBAAAA,eAAA,GAAdA,eAAA,CAAgBJ,IAAI,cAAAI,eAAA,uBAApBA,eAAA,CAAsBI,MAAM,KAAIf,KAAK,CAACc,OAAO,IAAI,MAAM;IAChEE,IAAI,EAAE,OAAO;IACbC,QAAQ,EAAE,CAAC,GAAG;EAChB,CAAC,CAAC;EACF,OAAOd,OAAO,CAACC,MAAM,CAACJ,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,eAAehB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}