{"ast":null,"code":"import \"core-js/modules/es.error.to-string.js\";\nimport \"core-js/modules/es.date.now.js\";\nimport \"core-js/modules/es.date.to-json.js\";\nimport \"core-js/modules/es.json.stringify.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/web.atob.js\";\nimport \"core-js/modules/web.dom-exception.constructor.js\";\nimport \"core-js/modules/web.dom-exception.stack.js\";\nimport \"core-js/modules/web.dom-exception.to-string-tag.js\";\nimport Cookies from 'js-cookie';\nvar TokenKey = 'Admin-Token';\nvar UserInfoKey = 'User-Info';\n\n// 获取token\nexport function getToken() {\n  return localStorage.getItem(TokenKey);\n}\n\n// 设置token\nexport function setToken(token) {\n  return localStorage.setItem(TokenKey, token);\n}\n\n// 移除token\nexport function removeToken() {\n  return localStorage.removeItem(TokenKey);\n}\n\n// 获取用户信息\nexport function getUserInfo() {\n  var info = localStorage.getItem(UserInfoKey);\n  return info ? JSON.parse(info) : null;\n}\n\n// 设置用户信息\nexport function setUserInfo(info) {\n  return localStorage.setItem(UserInfoKey, JSON.stringify(info));\n}\n\n// 移除用户信息\nexport function removeUserInfo() {\n  return localStorage.removeItem(UserInfoKey);\n}\n\n// 清除认证信息\nexport function clearAuth() {\n  removeToken();\n  removeUserInfo();\n  Cookies.remove(TokenKey);\n}\n\n// 检查是否已登录\nexport function isAuthenticated() {\n  return !!getToken();\n}\n\n// 设置token过期时间\nexport function setTokenWithExpiry(token) {\n  var expiryHours = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 24;\n  return Cookies.set(TokenKey, token, {\n    expires: expiryHours / 24 // Cookies.set 接受天数作为过期时间\n  });\n}\n\n// 获取token过期状态\nexport function isTokenExpired() {\n  var token = getToken();\n  if (!token) return true;\n\n  // 如果需要检查token的具体过期时间，可以解析JWT token\n  try {\n    var payload = JSON.parse(atob(token.split('.')[1]));\n    return payload.exp * 1000 < Date.now();\n  } catch (e) {\n    return true;\n  }\n}","map":{"version":3,"names":["Cookies","TokenKey","UserInfoKey","getToken","localStorage","getItem","setToken","token","setItem","removeToken","removeItem","getUserInfo","info","JSON","parse","setUserInfo","stringify","removeUserInfo","clearAuth","remove","isAuthenticated","setTokenWithExpiry","expiryHours","arguments","length","undefined","set","expires","isTokenExpired","payload","atob","split","exp","Date","now","e"],"sources":["C:/Users/ND/Desktop/Fixed_Project/frontend/src/utils/auth.js"],"sourcesContent":["import Cookies from 'js-cookie'\r\n\r\nconst TokenKey = 'Admin-Token'\r\nconst UserInfoKey = 'User-Info'\r\n\r\n// 获取token\r\nexport function getToken() {\r\n  return localStorage.getItem(TokenKey)\r\n}\r\n\r\n// 设置token\r\nexport function setToken(token) {\r\n  return localStorage.setItem(TokenKey, token)\r\n}\r\n\r\n// 移除token\r\nexport function removeToken() {\r\n  return localStorage.removeItem(TokenKey)\r\n}\r\n\r\n// 获取用户信息\r\nexport function getUserInfo() {\r\n  const info = localStorage.getItem(UserInfoKey)\r\n  return info ? JSON.parse(info) : null\r\n}\r\n\r\n// 设置用户信息\r\nexport function setUserInfo(info) {\r\n  return localStorage.setItem(UserInfoKey, JSON.stringify(info))\r\n}\r\n\r\n// 移除用户信息\r\nexport function removeUserInfo() {\r\n  return localStorage.removeItem(UserInfoKey)\r\n}\r\n\r\n// 清除认证信息\r\nexport function clearAuth() {\r\n  removeToken()\r\n  removeUserInfo()\r\n  Cookies.remove(TokenKey)\r\n}\r\n\r\n// 检查是否已登录\r\nexport function isAuthenticated() {\r\n  return !!getToken()\r\n}\r\n\r\n// 设置token过期时间\r\nexport function setTokenWithExpiry(token, expiryHours = 24) {\r\n  return Cookies.set(TokenKey, token, {\r\n    expires: expiryHours / 24 // Cookies.set 接受天数作为过期时间\r\n  })\r\n}\r\n\r\n// 获取token过期状态\r\nexport function isTokenExpired() {\r\n  const token = getToken()\r\n  if (!token) return true\r\n  \r\n  // 如果需要检查token的具体过期时间，可以解析JWT token\r\n  try {\r\n    const payload = JSON.parse(atob(token.split('.')[1]))\r\n    return payload.exp * 1000 < Date.now()\r\n  } catch (e) {\r\n    return true\r\n  }\r\n} "],"mappings":";;;;;;;;;AAAA,OAAOA,OAAO,MAAM,WAAW;AAE/B,IAAMC,QAAQ,GAAG,aAAa;AAC9B,IAAMC,WAAW,GAAG,WAAW;;AAE/B;AACA,OAAO,SAASC,QAAQA,CAAA,EAAG;EACzB,OAAOC,YAAY,CAACC,OAAO,CAACJ,QAAQ,CAAC;AACvC;;AAEA;AACA,OAAO,SAASK,QAAQA,CAACC,KAAK,EAAE;EAC9B,OAAOH,YAAY,CAACI,OAAO,CAACP,QAAQ,EAAEM,KAAK,CAAC;AAC9C;;AAEA;AACA,OAAO,SAASE,WAAWA,CAAA,EAAG;EAC5B,OAAOL,YAAY,CAACM,UAAU,CAACT,QAAQ,CAAC;AAC1C;;AAEA;AACA,OAAO,SAASU,WAAWA,CAAA,EAAG;EAC5B,IAAMC,IAAI,GAAGR,YAAY,CAACC,OAAO,CAACH,WAAW,CAAC;EAC9C,OAAOU,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACF,IAAI,CAAC,GAAG,IAAI;AACvC;;AAEA;AACA,OAAO,SAASG,WAAWA,CAACH,IAAI,EAAE;EAChC,OAAOR,YAAY,CAACI,OAAO,CAACN,WAAW,EAAEW,IAAI,CAACG,SAAS,CAACJ,IAAI,CAAC,CAAC;AAChE;;AAEA;AACA,OAAO,SAASK,cAAcA,CAAA,EAAG;EAC/B,OAAOb,YAAY,CAACM,UAAU,CAACR,WAAW,CAAC;AAC7C;;AAEA;AACA,OAAO,SAASgB,SAASA,CAAA,EAAG;EAC1BT,WAAW,CAAC,CAAC;EACbQ,cAAc,CAAC,CAAC;EAChBjB,OAAO,CAACmB,MAAM,CAAClB,QAAQ,CAAC;AAC1B;;AAEA;AACA,OAAO,SAASmB,eAAeA,CAAA,EAAG;EAChC,OAAO,CAAC,CAACjB,QAAQ,CAAC,CAAC;AACrB;;AAEA;AACA,OAAO,SAASkB,kBAAkBA,CAACd,KAAK,EAAoB;EAAA,IAAlBe,WAAW,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,EAAE;EACxD,OAAOvB,OAAO,CAAC0B,GAAG,CAACzB,QAAQ,EAAEM,KAAK,EAAE;IAClCoB,OAAO,EAAEL,WAAW,GAAG,EAAE,CAAC;EAC5B,CAAC,CAAC;AACJ;;AAEA;AACA,OAAO,SAASM,cAAcA,CAAA,EAAG;EAC/B,IAAMrB,KAAK,GAAGJ,QAAQ,CAAC,CAAC;EACxB,IAAI,CAACI,KAAK,EAAE,OAAO,IAAI;;EAEvB;EACA,IAAI;IACF,IAAMsB,OAAO,GAAGhB,IAAI,CAACC,KAAK,CAACgB,IAAI,CAACvB,KAAK,CAACwB,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACrD,OAAOF,OAAO,CAACG,GAAG,GAAG,IAAI,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC;EACxC,CAAC,CAAC,OAAOC,CAAC,EAAE;IACV,OAAO,IAAI;EACb;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}