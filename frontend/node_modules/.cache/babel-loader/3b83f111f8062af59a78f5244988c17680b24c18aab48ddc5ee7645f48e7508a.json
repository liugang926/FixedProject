{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/ND/Desktop/Fixed_Project/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/ND/Desktop/Fixed_Project/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { defineComponent, ref, onMounted } from 'vue';\nimport { ElMessage } from 'element-plus';\nimport request from '@/utils/request';\nexport default defineComponent({\n  name: 'Dashboard',\n  setup: function setup() {\n    var statistics = ref([{\n      title: '资产总数',\n      value: 0\n    }, {\n      title: '使用中',\n      value: 0\n    }, {\n      title: '闲置',\n      value: 0\n    }]);\n    var fetchData = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var response;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return request({\n                url: '/api/assets/statistics/',\n                method: 'get'\n              });\n            case 3:\n              response = _context.sent;\n              if (response) {\n                statistics.value[0].value = response.total || 0;\n                statistics.value[1].value = response.inUse || 0;\n                statistics.value[2].value = response.idle || 0;\n              }\n              _context.next = 11;\n              break;\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](0);\n              console.error('获取统计数据失败:', _context.t0);\n              ElMessage.error('获取统计数据失败');\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[0, 7]]);\n      }));\n      return function fetchData() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n    onMounted(fetchData);\n    return {\n      statistics: statistics\n    };\n  }\n});","map":{"version":3,"names":["defineComponent","ref","onMounted","ElMessage","request","name","setup","statistics","title","value","fetchData","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_callee$","_context","prev","next","url","method","sent","total","inUse","idle","t0","console","error","stop","apply","arguments"],"sources":["C:\\Users\\ND\\Desktop\\Fixed_Project\\frontend\\src\\views\\dashboard\\Dashboard.vue"],"sourcesContent":["<template>\r\n  <div class=\"dashboard-container\">\r\n    <el-row :gutter=\"20\">\r\n      <el-col :span=\"8\" v-for=\"(item, index) in statistics\" :key=\"index\">\r\n        <el-card>\r\n          <template #header>\r\n            <div class=\"card-header\">\r\n              <span>{{ item.title }}</span>\r\n            </div>\r\n          </template>\r\n          <div class=\"card-body\">\r\n            <h2>{{ item.value }}</h2>\r\n          </div>\r\n        </el-card>\r\n      </el-col>\r\n    </el-row>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { defineComponent, ref, onMounted } from 'vue'\r\nimport { ElMessage } from 'element-plus'\r\nimport request from '@/utils/request'\r\n\r\nexport default defineComponent({\r\n  name: 'Dashboard',\r\n  setup() {\r\n    const statistics = ref([\r\n      { title: '资产总数', value: 0 },\r\n      { title: '使用中', value: 0 },\r\n      { title: '闲置', value: 0 }\r\n    ])\r\n\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await request({\r\n          url: '/api/assets/statistics/',\r\n          method: 'get'\r\n        })\r\n        \r\n        if (response) {\r\n          statistics.value[0].value = response.total || 0\r\n          statistics.value[1].value = response.inUse || 0\r\n          statistics.value[2].value = response.idle || 0\r\n        }\r\n      } catch (error) {\r\n        console.error('获取统计数据失败:', error)\r\n        ElMessage.error('获取统计数据失败')\r\n      }\r\n    }\r\n\r\n    onMounted(fetchData)\r\n\r\n    return {\r\n      statistics\r\n    }\r\n  }\r\n})\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.dashboard-container {\r\n  padding: 20px;\r\n  \r\n  .el-card {\r\n    margin-bottom: 20px;\r\n    \r\n    .card-header {\r\n      display: flex;\r\n      justify-content: space-between;\r\n      align-items: center;\r\n    }\r\n    \r\n    .card-body {\r\n      text-align: center;\r\n      padding: 20px;\r\n      \r\n      h2 {\r\n        margin: 0;\r\n        font-size: 24px;\r\n        color: #409EFF;\r\n      }\r\n    }\r\n  }\r\n}\r\n</style> "],"mappings":";;AAoBA,SAASA,eAAe,EAAEC,GAAG,EAAEC,SAAQ,QAAS,KAAI;AACpD,SAASC,SAAQ,QAAS,cAAa;AACvC,OAAOC,OAAM,MAAO,iBAAgB;AAEpC,eAAeJ,eAAe,CAAC;EAC7BK,IAAI,EAAE,WAAW;EACjBC,KAAK,WAALA,KAAKA,CAAA,EAAG;IACN,IAAMC,UAAS,GAAIN,GAAG,CAAC,CACrB;MAAEO,KAAK,EAAE,MAAM;MAAEC,KAAK,EAAE;IAAE,CAAC,EAC3B;MAAED,KAAK,EAAE,KAAK;MAAEC,KAAK,EAAE;IAAE,CAAC,EAC1B;MAAED,KAAK,EAAE,IAAI;MAAEC,KAAK,EAAE;IAAE,EACzB;IAED,IAAMC,SAAQ;MAAA,IAAAC,IAAA,GAAAC,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,CAAI,SAAAC,QAAA;QAAA,IAAAC,QAAA;QAAA,OAAAH,mBAAA,GAAAI,IAAA,UAAAC,SAAAC,QAAA;UAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;YAAA;cAAAF,QAAA,CAAAC,IAAA;cAAAD,QAAA,CAAAE,IAAA;cAAA,OAESjB,OAAO,CAAC;gBAC7BkB,GAAG,EAAE,yBAAyB;gBAC9BC,MAAM,EAAE;cACV,CAAC;YAAA;cAHKP,QAAO,GAAAG,QAAA,CAAAK,IAAA;cAKb,IAAIR,QAAQ,EAAE;gBACZT,UAAU,CAACE,KAAK,CAAC,CAAC,CAAC,CAACA,KAAI,GAAIO,QAAQ,CAACS,KAAI,IAAK;gBAC9ClB,UAAU,CAACE,KAAK,CAAC,CAAC,CAAC,CAACA,KAAI,GAAIO,QAAQ,CAACU,KAAI,IAAK;gBAC9CnB,UAAU,CAACE,KAAK,CAAC,CAAC,CAAC,CAACA,KAAI,GAAIO,QAAQ,CAACW,IAAG,IAAK;cAC/C;cAAAR,QAAA,CAAAE,IAAA;cAAA;YAAA;cAAAF,QAAA,CAAAC,IAAA;cAAAD,QAAA,CAAAS,EAAA,GAAAT,QAAA;cAEAU,OAAO,CAACC,KAAK,CAAC,WAAW,EAAAX,QAAA,CAAAS,EAAO;cAChCzB,SAAS,CAAC2B,KAAK,CAAC,UAAU;YAAA;YAAA;cAAA,OAAAX,QAAA,CAAAY,IAAA;UAAA;QAAA,GAAAhB,OAAA;MAAA,CAE9B;MAAA,gBAhBML,SAAQA,CAAA;QAAA,OAAAC,IAAA,CAAAqB,KAAA,OAAAC,SAAA;MAAA;IAAA,GAgBd;IAEA/B,SAAS,CAACQ,SAAS;IAEnB,OAAO;MACLH,UAAS,EAATA;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}