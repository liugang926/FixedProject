{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.error.to-string.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport request from '@/utils/request';\n\n// 用户认证相关\nexport function login(data) {\n  return request({\n    url: '/api/users/login/',\n    method: 'post',\n    data: {\n      username: data.username,\n      password: data.password\n    }\n  }).then(function (response) {\n    if (response.error) {\n      return Promise.reject(new Error(response.error));\n    }\n    return response;\n  })[\"catch\"](function (error) {\n    var _error$response;\n    var message = ((_error$response = error.response) === null || _error$response === void 0 || (_error$response = _error$response.data) === null || _error$response === void 0 ? void 0 : _error$response.error) || '登录失败，请稍后重试';\n    return Promise.reject(new Error(message));\n  });\n}\nexport function logout() {\n  return request({\n    url: '/api/users/logout/',\n    method: 'post'\n  });\n}\nexport function getInfo() {\n  return request({\n    url: '/api/users/info/',\n    method: 'get'\n  });\n}\n\n// 用户管理相关\nexport function getUserList(params) {\n  return request({\n    url: '/users/',\n    method: 'get',\n    params: params\n  });\n}\nexport function getDevelopers() {\n  return request({\n    url: '/users/developers/',\n    method: 'get'\n  });\n}\nexport function getManagers() {\n  return request({\n    url: '/users/managers/',\n    method: 'get'\n  });\n}\nexport function createUser(data) {\n  return request({\n    url: '/users/',\n    method: 'post',\n    data: data\n  });\n}\nexport function updateUser(id, data) {\n  return request({\n    url: \"/users/\".concat(id, \"/\"),\n    method: 'put',\n    data: data\n  });\n}\nexport function deleteUser(id) {\n  return request({\n    url: \"/users/\".concat(id, \"/\"),\n    method: 'delete'\n  });\n}\n\n// 角色管理相关\nexport function getRoleList() {\n  return request({\n    url: '/roles/',\n    method: 'get'\n  });\n}\nexport function createRole(data) {\n  return request({\n    url: '/roles/',\n    method: 'post',\n    data: data\n  });\n}\nexport function updateRole(id, data) {\n  return request({\n    url: \"/roles/\".concat(id, \"/\"),\n    method: 'put',\n    data: data\n  });\n}\nexport function deleteRole(id) {\n  return request({\n    url: \"/roles/\".concat(id, \"/\"),\n    method: 'delete'\n  });\n}\n\n// 权限管理相关\nexport function getPermissionList() {\n  return request({\n    url: '/permissions/',\n    method: 'get'\n  });\n}\n\n// 用户角色关联相关\nexport function assignRole(data) {\n  return request({\n    url: '/user-roles/',\n    method: 'post',\n    data: data\n  });\n}\nexport function removeRole(id) {\n  return request({\n    url: \"/user-roles/\".concat(id, \"/\"),\n    method: 'delete'\n  });\n}\n\n// 用户操作相关\nexport function changePassword(id, data) {\n  return request({\n    url: \"/users/\".concat(id, \"/change_password/\"),\n    method: 'post',\n    data: data\n  });\n}\nexport function lockUser(id, reason) {\n  return request({\n    url: \"/users/\".concat(id, \"/lock/\"),\n    method: 'post',\n    data: {\n      reason: reason\n    }\n  });\n}\nexport function unlockUser(id) {\n  return request({\n    url: \"/users/\".concat(id, \"/unlock/\"),\n    method: 'post'\n  });\n}","map":{"version":3,"names":["request","login","data","url","method","username","password","then","response","error","Promise","reject","Error","_error$response","message","logout","getInfo","getUserList","params","getDevelopers","getManagers","createUser","updateUser","id","concat","deleteUser","getRoleList","createRole","updateRole","deleteRole","getPermissionList","assignRole","removeRole","changePassword","lockUser","reason","unlockUser"],"sources":["C:/Users/ND/Desktop/Fixed_Project/frontend/src/api/user.js"],"sourcesContent":["import request from '@/utils/request'\r\n\r\n// 用户认证相关\r\nexport function login(data) {\r\n  return request({\r\n    url: '/api/users/login/',\r\n    method: 'post',\r\n    data: {\r\n      username: data.username,\r\n      password: data.password\r\n    }\r\n  }).then(response => {\r\n    if (response.error) {\r\n      return Promise.reject(new Error(response.error))\r\n    }\r\n    return response\r\n  }).catch(error => {\r\n    const message = error.response?.data?.error || '登录失败，请稍后重试'\r\n    return Promise.reject(new Error(message))\r\n  })\r\n}\r\n\r\nexport function logout() {\r\n  return request({\r\n    url: '/api/users/logout/',\r\n    method: 'post'\r\n  })\r\n}\r\n\r\nexport function getInfo() {\r\n  return request({\r\n    url: '/api/users/info/',\r\n    method: 'get'\r\n  })\r\n}\r\n\r\n// 用户管理相关\r\nexport function getUserList(params) {\r\n  return request({\r\n    url: '/users/',\r\n    method: 'get',\r\n    params\r\n  })\r\n}\r\n\r\nexport function getDevelopers() {\r\n  return request({\r\n    url: '/users/developers/',\r\n    method: 'get'\r\n  })\r\n}\r\n\r\nexport function getManagers() {\r\n  return request({\r\n    url: '/users/managers/',\r\n    method: 'get'\r\n  })\r\n}\r\n\r\nexport function createUser(data) {\r\n  return request({\r\n    url: '/users/',\r\n    method: 'post',\r\n    data\r\n  })\r\n}\r\n\r\nexport function updateUser(id, data) {\r\n  return request({\r\n    url: `/users/${id}/`,\r\n    method: 'put',\r\n    data\r\n  })\r\n}\r\n\r\nexport function deleteUser(id) {\r\n  return request({\r\n    url: `/users/${id}/`,\r\n    method: 'delete'\r\n  })\r\n}\r\n\r\n// 角色管理相关\r\nexport function getRoleList() {\r\n  return request({\r\n    url: '/roles/',\r\n    method: 'get'\r\n  })\r\n}\r\n\r\nexport function createRole(data) {\r\n  return request({\r\n    url: '/roles/',\r\n    method: 'post',\r\n    data\r\n  })\r\n}\r\n\r\nexport function updateRole(id, data) {\r\n  return request({\r\n    url: `/roles/${id}/`,\r\n    method: 'put',\r\n    data\r\n  })\r\n}\r\n\r\nexport function deleteRole(id) {\r\n  return request({\r\n    url: `/roles/${id}/`,\r\n    method: 'delete'\r\n  })\r\n}\r\n\r\n// 权限管理相关\r\nexport function getPermissionList() {\r\n  return request({\r\n    url: '/permissions/',\r\n    method: 'get'\r\n  })\r\n}\r\n\r\n// 用户角色关联相关\r\nexport function assignRole(data) {\r\n  return request({\r\n    url: '/user-roles/',\r\n    method: 'post',\r\n    data\r\n  })\r\n}\r\n\r\nexport function removeRole(id) {\r\n  return request({\r\n    url: `/user-roles/${id}/`,\r\n    method: 'delete'\r\n  })\r\n}\r\n\r\n// 用户操作相关\r\nexport function changePassword(id, data) {\r\n  return request({\r\n    url: `/users/${id}/change_password/`,\r\n    method: 'post',\r\n    data\r\n  })\r\n}\r\n\r\nexport function lockUser(id, reason) {\r\n  return request({\r\n    url: `/users/${id}/lock/`,\r\n    method: 'post',\r\n    data: { reason }\r\n  })\r\n}\r\n\r\nexport function unlockUser(id) {\r\n  return request({\r\n    url: `/users/${id}/unlock/`,\r\n    method: 'post'\r\n  })\r\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}