{"ast":null,"code":"import \"core-js/modules/es.object.to-string.js\";\nimport axios from 'axios';\nimport { ElMessage } from 'element-plus';\nimport store from '@/store';\nimport { getToken } from '@/utils/auth';\n\n// 创建 axios 实例\nvar service = axios.create({\n  baseURL: process.env.VUE_APP_BASE_API,\n  timeout: 5000,\n  withCredentials: true\n});\n\n// 请求拦截器\nservice.interceptors.request.use(function (config) {\n  console.log('Request:', {\n    url: config.url,\n    method: config.method,\n    data: config.data\n  });\n  if (store.getters.token) {\n    config.headers['Authorization'] = \"Token \".concat(getToken());\n  }\n  return config;\n}, function (error) {\n  console.error('Request Error:', error);\n  return Promise.reject(error);\n});\n\n// 响应拦截器\nservice.interceptors.response.use(function (response) {\n  console.log('Response:', response.data);\n  var res = response.data;\n  // 如果返回的是二进制数据，直接返回\n  if (response.config.responseType === 'blob') {\n    return res;\n  }\n  return res;\n}, function (error) {\n  var _error$config, _error$response, _error$response2, _error$response3;\n  console.error('Response Error:', {\n    url: (_error$config = error.config) === null || _error$config === void 0 ? void 0 : _error$config.url,\n    status: (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status,\n    data: (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data,\n    message: error.message\n  });\n  var message = ((_error$response3 = error.response) === null || _error$response3 === void 0 || (_error$response3 = _error$response3.data) === null || _error$response3 === void 0 ? void 0 : _error$response3.error) || error.message || '请求失败';\n  ElMessage({\n    message: message,\n    type: 'error',\n    duration: 5 * 1000\n  });\n  return Promise.reject(error);\n});\nexport default service;","map":{"version":3,"names":["axios","ElMessage","store","getToken","service","create","baseURL","process","env","VUE_APP_BASE_API","timeout","withCredentials","interceptors","request","use","config","console","log","url","method","data","getters","token","headers","concat","error","Promise","reject","response","res","responseType","_error$config","_error$response","_error$response2","_error$response3","status","message","type","duration"],"sources":["C:/Users/ND/Desktop/Fixed_Project/frontend/src/utils/request.js"],"sourcesContent":["import axios from 'axios'\r\nimport { ElMessage } from 'element-plus'\r\nimport store from '@/store'\r\nimport { getToken } from '@/utils/auth'\r\n\r\n// 创建 axios 实例\r\nconst service = axios.create({\r\n  baseURL: process.env.VUE_APP_BASE_API,\r\n  timeout: 5000,\r\n  withCredentials: true\r\n})\r\n\r\n// 请求拦截器\r\nservice.interceptors.request.use(\r\n  config => {\r\n    console.log('Request:', {\r\n      url: config.url,\r\n      method: config.method,\r\n      data: config.data\r\n    })\r\n\r\n    if (store.getters.token) {\r\n      config.headers['Authorization'] = `Token ${getToken()}`\r\n    }\r\n    return config\r\n  },\r\n  error => {\r\n    console.error('Request Error:', error)\r\n    return Promise.reject(error)\r\n  }\r\n)\r\n\r\n// 响应拦截器\r\nservice.interceptors.response.use(\r\n  response => {\r\n    console.log('Response:', response.data)\r\n    const res = response.data\r\n    // 如果返回的是二进制数据，直接返回\r\n    if (response.config.responseType === 'blob') {\r\n      return res\r\n    }\r\n    return res\r\n  },\r\n  error => {\r\n    console.error('Response Error:', {\r\n      url: error.config?.url,\r\n      status: error.response?.status,\r\n      data: error.response?.data,\r\n      message: error.message\r\n    })\r\n\r\n    const message = error.response?.data?.error || error.message || '请求失败'\r\n    ElMessage({\r\n      message: message,\r\n      type: 'error',\r\n      duration: 5 * 1000\r\n    })\r\n    return Promise.reject(error)\r\n  }\r\n)\r\n\r\nexport default service "],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,cAAc;AACxC,OAAOC,KAAK,MAAM,SAAS;AAC3B,SAASC,QAAQ,QAAQ,cAAc;;AAEvC;AACA,IAAMC,OAAO,GAAGJ,KAAK,CAACK,MAAM,CAAC;EAC3BC,OAAO,EAAEC,OAAO,CAACC,GAAG,CAACC,gBAAgB;EACrCC,OAAO,EAAE,IAAI;EACbC,eAAe,EAAE;AACnB,CAAC,CAAC;;AAEF;AACAP,OAAO,CAACQ,YAAY,CAACC,OAAO,CAACC,GAAG,CAC9B,UAAAC,MAAM,EAAI;EACRC,OAAO,CAACC,GAAG,CAAC,UAAU,EAAE;IACtBC,GAAG,EAAEH,MAAM,CAACG,GAAG;IACfC,MAAM,EAAEJ,MAAM,CAACI,MAAM;IACrBC,IAAI,EAAEL,MAAM,CAACK;EACf,CAAC,CAAC;EAEF,IAAIlB,KAAK,CAACmB,OAAO,CAACC,KAAK,EAAE;IACvBP,MAAM,CAACQ,OAAO,CAAC,eAAe,CAAC,YAAAC,MAAA,CAAYrB,QAAQ,CAAC,CAAC,CAAE;EACzD;EACA,OAAOY,MAAM;AACf,CAAC,EACD,UAAAU,KAAK,EAAI;EACPT,OAAO,CAACS,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAAC;EACtC,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACArB,OAAO,CAACQ,YAAY,CAACgB,QAAQ,CAACd,GAAG,CAC/B,UAAAc,QAAQ,EAAI;EACVZ,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEW,QAAQ,CAACR,IAAI,CAAC;EACvC,IAAMS,GAAG,GAAGD,QAAQ,CAACR,IAAI;EACzB;EACA,IAAIQ,QAAQ,CAACb,MAAM,CAACe,YAAY,KAAK,MAAM,EAAE;IAC3C,OAAOD,GAAG;EACZ;EACA,OAAOA,GAAG;AACZ,CAAC,EACD,UAAAJ,KAAK,EAAI;EAAA,IAAAM,aAAA,EAAAC,eAAA,EAAAC,gBAAA,EAAAC,gBAAA;EACPlB,OAAO,CAACS,KAAK,CAAC,iBAAiB,EAAE;IAC/BP,GAAG,GAAAa,aAAA,GAAEN,KAAK,CAACV,MAAM,cAAAgB,aAAA,uBAAZA,aAAA,CAAcb,GAAG;IACtBiB,MAAM,GAAAH,eAAA,GAAEP,KAAK,CAACG,QAAQ,cAAAI,eAAA,uBAAdA,eAAA,CAAgBG,MAAM;IAC9Bf,IAAI,GAAAa,gBAAA,GAAER,KAAK,CAACG,QAAQ,cAAAK,gBAAA,uBAAdA,gBAAA,CAAgBb,IAAI;IAC1BgB,OAAO,EAAEX,KAAK,CAACW;EACjB,CAAC,CAAC;EAEF,IAAMA,OAAO,GAAG,EAAAF,gBAAA,GAAAT,KAAK,CAACG,QAAQ,cAAAM,gBAAA,gBAAAA,gBAAA,GAAdA,gBAAA,CAAgBd,IAAI,cAAAc,gBAAA,uBAApBA,gBAAA,CAAsBT,KAAK,KAAIA,KAAK,CAACW,OAAO,IAAI,MAAM;EACtEnC,SAAS,CAAC;IACRmC,OAAO,EAAEA,OAAO;IAChBC,IAAI,EAAE,OAAO;IACbC,QAAQ,EAAE,CAAC,GAAG;EAChB,CAAC,CAAC;EACF,OAAOZ,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,eAAerB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}