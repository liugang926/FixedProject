{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  name: 'Login',\n  data: function data() {\n    return {\n      loginForm: {\n        username: '',\n        password: ''\n      },\n      loginRules: {\n        username: [{\n          required: true,\n          message: '请输入用户名',\n          trigger: 'blur'\n        }],\n        password: [{\n          required: true,\n          message: '请输入密码',\n          trigger: 'blur'\n        }]\n      },\n      passwordType: 'password',\n      loading: false,\n      redirect: undefined\n    };\n  },\n  watch: {\n    $route: {\n      handler: function handler(route) {\n        this.redirect = route.query && route.query.redirect;\n      },\n      immediate: true\n    }\n  },\n  methods: {\n    handleLogin: function handleLogin() {\n      var _this = this;\n      this.$refs.loginForm.validate(function (valid) {\n        if (valid) {\n          _this.loading = true;\n          _this.$store.dispatch('user/login', _this.loginForm).then(function () {\n            _this.$router.push({\n              path: _this.redirect || '/'\n            });\n            _this.loading = false;\n          })[\"catch\"](function () {\n            _this.loading = false;\n          });\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["name","data","loginForm","username","password","loginRules","required","message","trigger","passwordType","loading","redirect","undefined","watch","$route","handler","route","query","immediate","methods","handleLogin","_this","$refs","validate","valid","$store","dispatch","then","$router","push","path"],"sources":["C:\\Users\\ND\\Desktop\\Fixed_Project\\frontend\\src\\views\\login\\index.vue"],"sourcesContent":["<template>\r\n  <div class=\"login-container\">\r\n    <el-form\r\n      ref=\"loginForm\"\r\n      :model=\"loginForm\"\r\n      :rules=\"loginRules\"\r\n      class=\"login-form\"\r\n      autocomplete=\"on\"\r\n      label-position=\"left\"\r\n    >\r\n      <div class=\"title-container\">\r\n        <h3 class=\"title\">系统登录</h3>\r\n      </div>\r\n\r\n      <el-form-item prop=\"username\">\r\n        <el-input\r\n          ref=\"username\"\r\n          v-model=\"loginForm.username\"\r\n          placeholder=\"用户名\"\r\n          name=\"username\"\r\n          type=\"text\"\r\n          autocomplete=\"on\"\r\n        />\r\n      </el-form-item>\r\n\r\n      <el-form-item prop=\"password\">\r\n        <el-input\r\n          ref=\"password\"\r\n          v-model=\"loginForm.password\"\r\n          placeholder=\"密码\"\r\n          name=\"password\"\r\n          :type=\"passwordType\"\r\n          autocomplete=\"on\"\r\n          @keyup.enter=\"handleLogin\"\r\n        />\r\n      </el-form-item>\r\n\r\n      <el-button\r\n        :loading=\"loading\"\r\n        type=\"primary\"\r\n        style=\"width: 100%; margin-bottom: 30px\"\r\n        @click.prevent=\"handleLogin\"\r\n      >\r\n        登录\r\n      </el-button>\r\n    </el-form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'Login',\r\n  data() {\r\n    return {\r\n      loginForm: {\r\n        username: '',\r\n        password: ''\r\n      },\r\n      loginRules: {\r\n        username: [{ required: true, message: '请输入用户名', trigger: 'blur' }],\r\n        password: [{ required: true, message: '请输入密码', trigger: 'blur' }]\r\n      },\r\n      passwordType: 'password',\r\n      loading: false,\r\n      redirect: undefined\r\n    }\r\n  },\r\n  watch: {\r\n    $route: {\r\n      handler: function(route) {\r\n        this.redirect = route.query && route.query.redirect\r\n      },\r\n      immediate: true\r\n    }\r\n  },\r\n  methods: {\r\n    handleLogin() {\r\n      this.$refs.loginForm.validate(valid => {\r\n        if (valid) {\r\n          this.loading = true\r\n          this.$store.dispatch('user/login', this.loginForm)\r\n            .then(() => {\r\n              this.$router.push({ path: this.redirect || '/' })\r\n              this.loading = false\r\n            })\r\n            .catch(() => {\r\n              this.loading = false\r\n            })\r\n        }\r\n      })\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.login-container {\r\n  min-height: 100%;\r\n  width: 100%;\r\n  background-color: #2d3a4b;\r\n  overflow: hidden;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n\r\n.login-form {\r\n  width: 520px;\r\n  max-width: 100%;\r\n  padding: 160px 35px 0;\r\n  margin: 0 auto;\r\n  overflow: hidden;\r\n}\r\n\r\n.title-container {\r\n  position: relative;\r\n  .title {\r\n    font-size: 26px;\r\n    color: #eee;\r\n    margin: 0 auto 40px auto;\r\n    text-align: center;\r\n    font-weight: bold;\r\n  }\r\n}\r\n</style> "],"mappings":";AAkDA,eAAe;EACbA,IAAI,EAAE,OAAO;EACbC,IAAI,WAAJA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,SAAS,EAAE;QACTC,QAAQ,EAAE,EAAE;QACZC,QAAQ,EAAE;MACZ,CAAC;MACDC,UAAU,EAAE;QACVF,QAAQ,EAAE,CAAC;UAAEG,QAAQ,EAAE,IAAI;UAAEC,OAAO,EAAE,QAAQ;UAAEC,OAAO,EAAE;QAAO,CAAC,CAAC;QAClEJ,QAAQ,EAAE,CAAC;UAAEE,QAAQ,EAAE,IAAI;UAAEC,OAAO,EAAE,OAAO;UAAEC,OAAO,EAAE;QAAO,CAAC;MAClE,CAAC;MACDC,YAAY,EAAE,UAAU;MACxBC,OAAO,EAAE,KAAK;MACdC,QAAQ,EAAEC;IACZ;EACF,CAAC;EACDC,KAAK,EAAE;IACLC,MAAM,EAAE;MACNC,OAAO,EAAE,SAATA,OAAOA,CAAWC,KAAK,EAAE;QACvB,IAAI,CAACL,QAAO,GAAIK,KAAK,CAACC,KAAI,IAAKD,KAAK,CAACC,KAAK,CAACN,QAAO;MACpD,CAAC;MACDO,SAAS,EAAE;IACb;EACF,CAAC;EACDC,OAAO,EAAE;IACPC,WAAW,WAAXA,WAAWA,CAAA,EAAG;MAAA,IAAAC,KAAA;MACZ,IAAI,CAACC,KAAK,CAACpB,SAAS,CAACqB,QAAQ,CAAC,UAAAC,KAAI,EAAK;QACrC,IAAIA,KAAK,EAAE;UACTH,KAAI,CAACX,OAAM,GAAI,IAAG;UAClBW,KAAI,CAACI,MAAM,CAACC,QAAQ,CAAC,YAAY,EAAEL,KAAI,CAACnB,SAAS,EAC9CyB,IAAI,CAAC,YAAM;YACVN,KAAI,CAACO,OAAO,CAACC,IAAI,CAAC;cAAEC,IAAI,EAAET,KAAI,CAACV,QAAO,IAAK;YAAI,CAAC;YAChDU,KAAI,CAACX,OAAM,GAAI,KAAI;UACrB,CAAC,UACK,CAAC,YAAM;YACXW,KAAI,CAACX,OAAM,GAAI,KAAI;UACrB,CAAC;QACL;MACF,CAAC;IACH;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}