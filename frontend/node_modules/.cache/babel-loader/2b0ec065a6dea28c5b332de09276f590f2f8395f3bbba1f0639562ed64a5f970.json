{"ast":null,"code":"import \"core-js/modules/es.object.to-string.js\";\nimport axios from 'axios';\nimport { ElMessage } from 'element-plus';\nimport store from '@/store';\nimport { getToken } from '@/utils/auth';\n\n// 创建axios实例\nvar service = axios.create({\n  baseURL: '/',\n  // 使用根路径\n  timeout: 5000\n});\n\n// 请求拦截器\nservice.interceptors.request.use(function (config) {\n  // 添加详细的调试日志\n  console.log('Request Config:', {\n    url: config.url,\n    method: config.method,\n    data: config.data,\n    headers: config.headers,\n    baseURL: config.baseURL\n  });\n  if (store.state.user.token) {\n    config.headers['Authorization'] = 'Token ' + getToken();\n  }\n  return config;\n}, function (error) {\n  console.error('Request Error:', error);\n  return Promise.reject(error);\n});\n\n// 响应拦截器\nservice.interceptors.response.use(function (response) {\n  console.log('Response:', response.data);\n  return response.data;\n}, function (error) {\n  var _error$response, _error$response2, _error$config, _error$response3;\n  console.error('Response Error:', {\n    status: (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status,\n    data: (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data,\n    config: error.config,\n    url: (_error$config = error.config) === null || _error$config === void 0 ? void 0 : _error$config.url,\n    message: error.message\n  });\n  ElMessage({\n    message: ((_error$response3 = error.response) === null || _error$response3 === void 0 || (_error$response3 = _error$response3.data) === null || _error$response3 === void 0 ? void 0 : _error$response3.error) || error.message || '请求失败',\n    type: 'error',\n    duration: 5 * 1000\n  });\n  return Promise.reject(error);\n});\nexport default service;","map":{"version":3,"names":["axios","ElMessage","store","getToken","service","create","baseURL","timeout","interceptors","request","use","config","console","log","url","method","data","headers","state","user","token","error","Promise","reject","response","_error$response","_error$response2","_error$config","_error$response3","status","message","type","duration"],"sources":["C:/Users/ND/Desktop/Fixed_Project/frontend/src/utils/request.js"],"sourcesContent":["import axios from 'axios'\r\nimport { ElMessage } from 'element-plus'\r\nimport store from '@/store'\r\nimport { getToken } from '@/utils/auth'\r\n\r\n// 创建axios实例\r\nconst service = axios.create({\r\n  baseURL: '/',  // 使用根路径\r\n  timeout: 5000\r\n})\r\n\r\n// 请求拦截器\r\nservice.interceptors.request.use(\r\n  config => {\r\n    // 添加详细的调试日志\r\n    console.log('Request Config:', {\r\n      url: config.url,\r\n      method: config.method,\r\n      data: config.data,\r\n      headers: config.headers,\r\n      baseURL: config.baseURL\r\n    })\r\n\r\n    if (store.state.user.token) {\r\n      config.headers['Authorization'] = 'Token ' + getToken()\r\n    }\r\n    return config\r\n  },\r\n  error => {\r\n    console.error('Request Error:', error)\r\n    return Promise.reject(error)\r\n  }\r\n)\r\n\r\n// 响应拦截器\r\nservice.interceptors.response.use(\r\n  response => {\r\n    console.log('Response:', response.data)\r\n    return response.data\r\n  },\r\n  error => {\r\n    console.error('Response Error:', {\r\n      status: error.response?.status,\r\n      data: error.response?.data,\r\n      config: error.config,\r\n      url: error.config?.url,\r\n      message: error.message\r\n    })\r\n    \r\n    ElMessage({\r\n      message: error.response?.data?.error || error.message || '请求失败',\r\n      type: 'error',\r\n      duration: 5 * 1000\r\n    })\r\n    return Promise.reject(error)\r\n  }\r\n)\r\n\r\nexport default service "],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,cAAc;AACxC,OAAOC,KAAK,MAAM,SAAS;AAC3B,SAASC,QAAQ,QAAQ,cAAc;;AAEvC;AACA,IAAMC,OAAO,GAAGJ,KAAK,CAACK,MAAM,CAAC;EAC3BC,OAAO,EAAE,GAAG;EAAG;EACfC,OAAO,EAAE;AACX,CAAC,CAAC;;AAEF;AACAH,OAAO,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CAC9B,UAAAC,MAAM,EAAI;EACR;EACAC,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAE;IAC7BC,GAAG,EAAEH,MAAM,CAACG,GAAG;IACfC,MAAM,EAAEJ,MAAM,CAACI,MAAM;IACrBC,IAAI,EAAEL,MAAM,CAACK,IAAI;IACjBC,OAAO,EAAEN,MAAM,CAACM,OAAO;IACvBX,OAAO,EAAEK,MAAM,CAACL;EAClB,CAAC,CAAC;EAEF,IAAIJ,KAAK,CAACgB,KAAK,CAACC,IAAI,CAACC,KAAK,EAAE;IAC1BT,MAAM,CAACM,OAAO,CAAC,eAAe,CAAC,GAAG,QAAQ,GAAGd,QAAQ,CAAC,CAAC;EACzD;EACA,OAAOQ,MAAM;AACf,CAAC,EACD,UAAAU,KAAK,EAAI;EACPT,OAAO,CAACS,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAAC;EACtC,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACAjB,OAAO,CAACI,YAAY,CAACgB,QAAQ,CAACd,GAAG,CAC/B,UAAAc,QAAQ,EAAI;EACVZ,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEW,QAAQ,CAACR,IAAI,CAAC;EACvC,OAAOQ,QAAQ,CAACR,IAAI;AACtB,CAAC,EACD,UAAAK,KAAK,EAAI;EAAA,IAAAI,eAAA,EAAAC,gBAAA,EAAAC,aAAA,EAAAC,gBAAA;EACPhB,OAAO,CAACS,KAAK,CAAC,iBAAiB,EAAE;IAC/BQ,MAAM,GAAAJ,eAAA,GAAEJ,KAAK,CAACG,QAAQ,cAAAC,eAAA,uBAAdA,eAAA,CAAgBI,MAAM;IAC9Bb,IAAI,GAAAU,gBAAA,GAAEL,KAAK,CAACG,QAAQ,cAAAE,gBAAA,uBAAdA,gBAAA,CAAgBV,IAAI;IAC1BL,MAAM,EAAEU,KAAK,CAACV,MAAM;IACpBG,GAAG,GAAAa,aAAA,GAAEN,KAAK,CAACV,MAAM,cAAAgB,aAAA,uBAAZA,aAAA,CAAcb,GAAG;IACtBgB,OAAO,EAAET,KAAK,CAACS;EACjB,CAAC,CAAC;EAEF7B,SAAS,CAAC;IACR6B,OAAO,EAAE,EAAAF,gBAAA,GAAAP,KAAK,CAACG,QAAQ,cAAAI,gBAAA,gBAAAA,gBAAA,GAAdA,gBAAA,CAAgBZ,IAAI,cAAAY,gBAAA,uBAApBA,gBAAA,CAAsBP,KAAK,KAAIA,KAAK,CAACS,OAAO,IAAI,MAAM;IAC/DC,IAAI,EAAE,OAAO;IACbC,QAAQ,EAAE,CAAC,GAAG;EAChB,CAAC,CAAC;EACF,OAAOV,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,eAAejB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}