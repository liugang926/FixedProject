{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport axios from 'axios';\nimport { ElMessage } from 'element-plus';\nimport store from '@/store';\nimport { getToken } from '@/utils/auth';\nimport router from '@/router';\n\n// 创建axios实例\nvar service = axios.create({\n  baseURL: '/api',\n  // 添加 /api 前缀\n  timeout: 5000 // 请求超时时间\n});\n\n// 请求拦截器\nservice.interceptors.request.use(function (config) {\n  var token = getToken();\n  if (token) {\n    config.headers['Authorization'] = \"Token \".concat(token);\n  }\n  return config;\n}, function (error) {\n  console.error('Request Error:', error);\n  return Promise.reject(error);\n});\n\n// 响应拦截器\nservice.interceptors.response.use(function (response) {\n  return response.data;\n}, function (error) {\n  var _error$response, _error$response2;\n  console.error('API Error:', error.response);\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401 || ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.status) === 403) {\n    // Token 失效或未授权，清除用户信息并跳转到登录页\n    store.dispatch('user/resetToken').then(function () {\n      router.push(\"/login?redirect=\".concat(router.currentRoute.value.fullPath));\n    });\n  } else {\n    var _error$response3, _error$response4, _error$response5;\n    var message = ((_error$response3 = error.response) === null || _error$response3 === void 0 || (_error$response3 = _error$response3.data) === null || _error$response3 === void 0 ? void 0 : _error$response3.detail) || ((_error$response4 = error.response) === null || _error$response4 === void 0 || (_error$response4 = _error$response4.data) === null || _error$response4 === void 0 ? void 0 : _error$response4.message) || ((_error$response5 = error.response) === null || _error$response5 === void 0 || (_error$response5 = _error$response5.data) === null || _error$response5 === void 0 ? void 0 : _error$response5.error) || error.message;\n    ElMessage({\n      message: message,\n      type: 'error',\n      duration: 5 * 1000\n    });\n  }\n  return Promise.reject(error);\n});\nexport default service;","map":{"version":3,"names":["axios","ElMessage","store","getToken","router","service","create","baseURL","timeout","interceptors","request","use","config","token","headers","concat","error","console","Promise","reject","response","data","_error$response","_error$response2","status","dispatch","then","push","currentRoute","value","fullPath","_error$response3","_error$response4","_error$response5","message","detail","type","duration"],"sources":["C:/Users/ND/Desktop/Fixed_Project/frontend/src/utils/request.js"],"sourcesContent":["import axios from 'axios'\r\nimport { ElMessage } from 'element-plus'\r\nimport store from '@/store'\r\nimport { getToken } from '@/utils/auth'\r\nimport router from '@/router'\r\n\r\n// 创建axios实例\r\nconst service = axios.create({\r\n  baseURL: '/api', // 添加 /api 前缀\r\n  timeout: 5000 // 请求超时时间\r\n})\r\n\r\n// 请求拦截器\r\nservice.interceptors.request.use(\r\n  config => {\r\n    const token = getToken()\r\n    if (token) {\r\n      config.headers['Authorization'] = `Token ${token}`\r\n    }\r\n    return config\r\n  },\r\n  error => {\r\n    console.error('Request Error:', error)\r\n    return Promise.reject(error)\r\n  }\r\n)\r\n\r\n// 响应拦截器\r\nservice.interceptors.response.use(\r\n  response => response.data,\r\n  error => {\r\n    console.error('API Error:', error.response)\r\n    if (error.response?.status === 401 || error.response?.status === 403) {\r\n      // Token 失效或未授权，清除用户信息并跳转到登录页\r\n      store.dispatch('user/resetToken').then(() => {\r\n        router.push(`/login?redirect=${router.currentRoute.value.fullPath}`)\r\n      })\r\n    } else {\r\n      const message = error.response?.data?.detail || \r\n                     error.response?.data?.message || \r\n                     error.response?.data?.error ||\r\n                     error.message\r\n      ElMessage({\r\n        message: message,\r\n        type: 'error',\r\n        duration: 5 * 1000\r\n      })\r\n    }\r\n    return Promise.reject(error)\r\n  }\r\n)\r\n\r\nexport default service "],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,cAAc;AACxC,OAAOC,KAAK,MAAM,SAAS;AAC3B,SAASC,QAAQ,QAAQ,cAAc;AACvC,OAAOC,MAAM,MAAM,UAAU;;AAE7B;AACA,IAAMC,OAAO,GAAGL,KAAK,CAACM,MAAM,CAAC;EAC3BC,OAAO,EAAE,MAAM;EAAE;EACjBC,OAAO,EAAE,IAAI,CAAC;AAChB,CAAC,CAAC;;AAEF;AACAH,OAAO,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CAC9B,UAAAC,MAAM,EAAI;EACR,IAAMC,KAAK,GAAGV,QAAQ,CAAC,CAAC;EACxB,IAAIU,KAAK,EAAE;IACTD,MAAM,CAACE,OAAO,CAAC,eAAe,CAAC,YAAAC,MAAA,CAAYF,KAAK,CAAE;EACpD;EACA,OAAOD,MAAM;AACf,CAAC,EACD,UAAAI,KAAK,EAAI;EACPC,OAAO,CAACD,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAAC;EACtC,OAAOE,OAAO,CAACC,MAAM,CAACH,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACAX,OAAO,CAACI,YAAY,CAACW,QAAQ,CAACT,GAAG,CAC/B,UAAAS,QAAQ;EAAA,OAAIA,QAAQ,CAACC,IAAI;AAAA,GACzB,UAAAL,KAAK,EAAI;EAAA,IAAAM,eAAA,EAAAC,gBAAA;EACPN,OAAO,CAACD,KAAK,CAAC,YAAY,EAAEA,KAAK,CAACI,QAAQ,CAAC;EAC3C,IAAI,EAAAE,eAAA,GAAAN,KAAK,CAACI,QAAQ,cAAAE,eAAA,uBAAdA,eAAA,CAAgBE,MAAM,MAAK,GAAG,IAAI,EAAAD,gBAAA,GAAAP,KAAK,CAACI,QAAQ,cAAAG,gBAAA,uBAAdA,gBAAA,CAAgBC,MAAM,MAAK,GAAG,EAAE;IACpE;IACAtB,KAAK,CAACuB,QAAQ,CAAC,iBAAiB,CAAC,CAACC,IAAI,CAAC,YAAM;MAC3CtB,MAAM,CAACuB,IAAI,oBAAAZ,MAAA,CAAoBX,MAAM,CAACwB,YAAY,CAACC,KAAK,CAACC,QAAQ,CAAE,CAAC;IACtE,CAAC,CAAC;EACJ,CAAC,MAAM;IAAA,IAAAC,gBAAA,EAAAC,gBAAA,EAAAC,gBAAA;IACL,IAAMC,OAAO,GAAG,EAAAH,gBAAA,GAAAf,KAAK,CAACI,QAAQ,cAAAW,gBAAA,gBAAAA,gBAAA,GAAdA,gBAAA,CAAgBV,IAAI,cAAAU,gBAAA,uBAApBA,gBAAA,CAAsBI,MAAM,OAAAH,gBAAA,GAC7BhB,KAAK,CAACI,QAAQ,cAAAY,gBAAA,gBAAAA,gBAAA,GAAdA,gBAAA,CAAgBX,IAAI,cAAAW,gBAAA,uBAApBA,gBAAA,CAAsBE,OAAO,OAAAD,gBAAA,GAC7BjB,KAAK,CAACI,QAAQ,cAAAa,gBAAA,gBAAAA,gBAAA,GAAdA,gBAAA,CAAgBZ,IAAI,cAAAY,gBAAA,uBAApBA,gBAAA,CAAsBjB,KAAK,KAC3BA,KAAK,CAACkB,OAAO;IAC5BjC,SAAS,CAAC;MACRiC,OAAO,EAAEA,OAAO;MAChBE,IAAI,EAAE,OAAO;MACbC,QAAQ,EAAE,CAAC,GAAG;IAChB,CAAC,CAAC;EACJ;EACA,OAAOnB,OAAO,CAACC,MAAM,CAACH,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,eAAeX,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}